==============================
22.04.16 Release CLHEP-2.3.2.2
==============================

2016-04-21 Lynn Garren <garren@fnal.gov> 

  * cmake: need to recognize both Clang and AppleClang

==============================
19.04.16 Release CLHEP-2.3.2.1
==============================

2016-04-19 Lynn Garren <garren@fnal.gov> 

  * gcc must be gcc 4.8 or better 
  * clang must be 3.5 or better
  * cmake: Remove obsolete cmake macros
  * cmake: Set CMAKE_SHARED_LINKER_FLAGS
  * cmake: Use find_package(Threads)

2016-03-25 W. David Dagenhart <wdd@fnal.gov>

  * Utility/Utility/use_atomic.h: Use std::atomic when the compiler declares it 
    uses the C++11 standard

2016-03-25 W. David Dagenhart <wdd@fnal.gov>

  * Random/src/MixMaxRng.cc: The uncorrected code might not always yield independent seeds.
    If two threads execute numberOfEngines++ and after both finish that both 
    execute setSeed, then they will have the same seed. Fixed.
  * Random/src/Random.cc: There is a thread local variable of the type "defaults"
    that contains two shared_ptr's in Random.cc.  This causes an intermittent
    problem on OSX.  The complex objects containing the shared_ptr's have been
    moved into a list of objects and the now the thread_local only contains a 
    simple pointer now that points into the list.
    Use the new Utility/use_atomic.h header.


==============================
10.11.15 Release CLHEP-2.3.1.1
==============================

2015-11-10 Lynn Garren <garren@fnal.gov> 

  * Add explicit support for the Intel compiler

2015-11-04 Lynn Garren <garren@fnal.gov> 

  * make sure all generated defs.h headers use unique variable names

==============================
03.11.15 Release CLHEP-2.3.1.0
==============================

2015-10-30 Lynn Garren <garren@fnal.gov> 

  * A compiler which supports at least -std=c++11 is now required.
    Older compilers are no longer supported.
    In the case of gcc, gcc 4.8.1 or later is required.


2015-10-05 Gabriele Cosmo <Gabriele.Cosmo@cern.ch>

  * Utility/Utility/memory.h is now a simple wrapper.
    Typedef-ed shared_ptr and unique_ptr to standard types.
  * Utility: Remove no longer necessary Utility/type_traits.h.
  * Units/Units/SystemOfUnits.h: add liter and its sub-units.
  * Random: use std::shared_ptr instead of CLHEP::shared_ptr
  * Random/RandExpZiggurat: use std::shared_ptr instead of bare pointer
  * Random: Added MixMax random engine classes to the Random module, implementing the
    "Matrix Generator of Pseudorandom Numbers", as described in J. Compt. Phy. 97, 573 (1991).

2015-07-16 Ben Morgan <Ben.Morgan@warwick.ac.uk>

  * Update install of component libs using EXPORT keyword to create
    imported targets for these in the output "library depends" file.
    Allow client of CLHEPConfig to choose between single/module libraries
    via COMPONENT arguments to CMake's find_package command. Provide
    similar option for choosing between shared (the default) and and
    static libs. Disallow mixing of shared/static libs in output
    CLHEP_LIBRARIES, though mixed linking, if required, is still permitted
    by direct access to the imported targets.
  * Implement new pkg-config template for component libs. Configure and
    install as per single 'clhep.pc', adding 'Requires' field where needed.
    Use exact versions in Requires to ensure API compatibility.

==============================
09.07.15 Release CLHEP-2.3.0.0
==============================

  * cmake is now the only build option

==============================
18.06.15 Release CLHEP-2.2.0.8
==============================

2015-06-18 Lynn Garren <garren@fnal.gov> 

  * Random/Random/Randomize.h: use __attribute__((unused)) for gcc

2015-06-12 Lynn Garren <garren@fnal.gov> 

  * Random/Random/RandGauss.h, Random/src/RandGauss.cc:
    implement static methods dealing with static data
    in RandGauss.cc instead of in RandGauss.h
  * protect against warnings in Utility/memory.h and Utility/type_traits.h

==============================
27.06.11 Release CLHEP-2.2.0.7
==============================

2015-06-10 Lynn Garren <garren@fnal.gov> 

  * do not use -Wno-deprecated-declarations when building for c++NN
  *  __attribute__((unused)) is not recognized by Visual C++
  * Make sure asserts are enabled for tests by removing -DNDEBUG
    from the compiler flags when building the tests.  This solves 
    the unused variable problem.

==============================
27.05.15 Release CLHEP-2.2.0.6
==============================

2015-05-27 Lynn Garren <garren@fnal.gov> 

  * use  __attribute__((unused)) for variables only used in assert inside a test
    affects Geometry, Random, Utility, and Vector
  * Random/Random/Randomize.h: protect against unused variable warning
  * Utility/Utility/memory.h: protect against non virtual destructor warning
  * Random/Random/RandGaussZiggurat.h, Random/src/RandGaussZiggurat.cc: use std::abs
  * deal with shadowing variables in GenericFunctions, Random/test, and Utility/test 
  * Evaluator/src/Evaluator.cc: protect against maybe-uninitialized warning
  * GenericFunctions/src/DefiniteIntegral.cc: fix shadowing found by clang

==============================
10.02.15 Release CLHEP-2.2.0.5
==============================

2015-02-09 Lynn Garren <garren@fnal.gov> 

  * cmake: recognize -std=c++0x, -std=c++11, -std=c++1y, and -std=c++14
  * can set CLHEP_BUILD_CXXSTD to one of these flags
  * if CLHEP_BUILD_CXXSTD is "ON", then  -std=c++11 is used

==============================
21.11.14 Release CLHEP-2.2.0.4
==============================

2014-11-21 Lynn Garren <garren@fnal.gov> 

  * Utility/Utility/memory.h: fix a type mismatch
  
  * GenericFunctions/src/DefiniteIntegral.cc: explicit initialization

2014-11-20 Lynn Garren <garren@fnal.gov> 

  * Random/src/RanshiEngine.cc: use a pragma to ignore aggressive 32bit compiler warnings

  * Vector/Vector/ThreeVector.icc: inline Hep3Vector::operator () (int i)

==============================
18.08.14 Release CLHEP-2.2.0.3
==============================

2014-08-18 Lynn Garren <garren@fnal.gov> 

  * cmake/Modules/ClhepVariables.cmake: DO NOT use any -ftls-model flags.
    Except in very specialized cases, the compiler automatically does the right thing.

==============================
12.08.14 Release CLHEP-2.2.0.2
==============================

2014-08-12 Lynn Garren <garren@fnal.gov> 

  * cmake/Modules/ClhepVariables.cmake: if the user compiles with -std=c++11
    and does not use -DCLHEP_BUILD_CXXSTD=ON, the required flags will be set.

2014-08-08 Lynn Garren <garren@fnal.gov> 

  * Units/Units/SystemOfUnits.h, Units/Units/PhysicalConstants.h:
    move definition of pi into SystemOfUnits so it is not defined twice
    Note that PhysicalConstants.h includes SystemOfUnits.h.

2014-08-04 Lynn Garren <garren@fnal.gov> 

  * Utility/Utility/Utility-config.in: remove unnecessary -lm


2014-08-01 Lynn Garren <garren@fnal.gov> 

  * Utility/Utility/CMakeLists.txt: install atomic_int.h and thread_local.h

==============================
23.06.14 Release CLHEP-2.2.0.1
==============================

2014-06-20 Lynn Garren <garren@fnal.gov> 

  * Utility/Utility/Makefile.am: install atomic_int.h and thread_local.h

2014-06-20 Lynn Garren <garren@fnal.gov>

  * Geometry/test/testBasicVector3D.cc: pragma fix for modern clang

2014-06-20 Lynn Garren <garren@fnal.gov> 

  * GenericFunctions/GenericFunctions/StepDoublingRKStepper.hh: fix wrapper name

==============================
16.06.14 Release CLHEP-2.2.0.0
==============================
2014-06-06 Lynn Garren <garren@fnal.gov> 

  * Random/src/RanshiEngine.cc: use explicit 32bit mask to avoid compiler warnings
  * Random/src/MTwistEngine.cc: make sure we don't go past the end of the 
                                array in MTwistEngine::showStatus
 
==============================
14.05.14 Release CLHEP-2.2.0.0.b01
==============================

2014-05-14 Lynn Garren <garren@fnal.gov> 

  * new cmake option: -DCLHEP_BUILD_CXXSTD=ON
    Use this to enable the c++11 extenstions.
    This option adds the following flags:
    -std=c++11 -ftls-model=initial-exec -pthread -Wno-deprecated-declarations

2014-05-13 Lynn Garren <garren@fnal.gov> 

  * Random/src/Random.cc: remove unnecessary inline

2014-03-04 W. David Dagenhart <wdd@fnal.gov>

  * In Random package convert statics and globals to const, thread
    local or atomic to improve thread safety.
 
==============================
14.11.14 Release CLHEP-2.1.4.3
==============================

2014-06-06 Lynn Garren <garren@fnal.gov> 

  * Random/src/RanshiEngine.cc: use explicit 32bit mask to avoid compiler warnings
  * Random/src/MTwistEngine.cc: make sure we don't go past the end of the 
                                array in MTwistEngine::showStatus
 
2014-05-04 Lynn Garren <garren@fnal.gov> 

  * Random/src/Random.cc: remove unnecessary inline
  
==============================
12.05.14 Release CLHEP-2.1.4.2
==============================

2014-05-04 Lynn Garren <garren@fnal.gov> 

  * Random/test/testBug58950.cc: accept fix for bug 104289

2014-05-04 Lynn Garren <garren@fnal.gov> 

  * Matrix/src/Vector.cc: remove inline - no reason to use it in a cc file

2014-02-24 Lynn Garren <garren@fnal.gov> 

  * Vector, Random, Matrix: remove register declaration of ints and doubles
    use of register is now redundant and ignored by modern compilers

  * GenericFunctions, Geometry/test, Utility/test, Vector/test:
    protect against warnings about variables that are used inside asserts

==============================
18.11.13 Release CLHEP-2.1.4.1
==============================

2013-11-18 Lynn Garren <garren@fnal.gov>

	* Evaluator/src/setSystemOfUnits.cc: additional units to match Units

2013-11-14 Lynn Garren <garren@fnal.gov> 

	* Random/Random/Randomize.h: include RandExpZiggurat and RandGaussZiggurat

	* configure.ac: change for unsupported Darwin build with autotools

==============================
05.11.13 Release CLHEP-2.1.4.0
==============================

2013-11-04 Lynn Garren <garren@fnal.gov> 

	* Random/test: make sure all output streams have unique names
	* Random/RandGaussZiggurat - abs type correctness

2013-10-31 Lynn Garren <garren@fnal.gov> 

	* Random/src/RandGaussZiggurat.cc - fix potential shadowing issue
	* Random/src/RandExpZiggurat.cc - fix potential shadowing issue
	* Units/Units/SystemOfUnits.h: adding definitions for curies
	* Units/test/testUnits.cc: use the same M_PI logic as found elsewhere
	* clhep-config: fix for OSX
	* cmake/Modules/ClhepBuildTex.cmake: don't try to install a file that has not been created

2013-09-26 Lynn Garren <garren@fnal.gov> 

	* Random: including RandGaussZiggurat and RandExpZiggurat

2013-01-11 Lynn Garren <garren@fnal.gov> 

	* Matrix: change the names of more internal variables so -Wshadow does not complain

==============================
14.11.12 Release CLHEP-2.1.3.1
==============================

2012-11-14 Lynn Garren <garren@fnal.gov>

	* Vector: clean up naming overlap between Units and internal variables

==============================
06.11.12 Release CLHEP-2.1.3.0
==============================

2012-11-08  Lynn Garren <garren@fnal.gov>

	* creation of symbolic links now respects DESTDIR

2012-09-06  Joe Boudreau <boudreau@cern.ch>

	* MATRIX/DiagMatrix, MATRIX/GenMatrix, MATRIX/SymMatrix: 
	  Added two methods to [-,Diag,Sym]Matrix to carry out the matrix 
	  inversion without the users needing to provide an ierr flag. 
	  These methods are all inline and called invert() and inverse(), 
	  so they overload the existing inversion routines for the relevant class.  
	  If an error occurs, then an std::runtime_error is thrown.

2012-08-22  Lynn Garren <garren@fnal.gov>

	* clhep-config: fix for Mountain Lion

==============================
16.08.12 Release CLHEP-2.1.2.5
==============================

2012-08-15  Lynn Garren <garren@fnal.gov>

	* GenericFunctions: latest changes from Joe Boudreau
	* GenericFunctions: change the names of internal variables so -Wshadow does not complain

2012-08-14 Lynn Garren <garren@fnal.gov>

	* cmake/Modules: use OUTPUT_STRIP_TRAILING_WHITESPACE with execute_process commands
	* CMakeLists.txt, cmake/Modules: enable -DLIB_SUFFIX=64

2012-08-07 Lynn Garren <garren@fnal.gov>

	* Vector/LorentzVector.h: make the HepLorentzVector(double t) constructor explicit

==============================
09.07.12 Release CLHEP-2.1.2.4
==============================

2012-07-09  L. Garren  <garren@fnal.gov>

	* cmake/Modules: enclose CMAKE_COMMAND in quotes when inside execute_process
	* test shell scripts: make sure any paths are enclosed in quotes

2012-06-25  L. Garren  <garren@fnal.gov>

	* cmake/Modules: Use newer execute_process instead of exec_program
	                 Try to cope with special characters in path

==============================
31.05.12 Release CLHEP-2.1.2.3
==============================
2012-05-31 Lynn Garren <garren@fnal.gov>

	* Random: fix for shadowing when global units used
	* Vector: fix for shadowing when global units used
                  USING_VISUAL code blocks are no longer needed

2012-05-30  Lynn Garren <garren@fnal.gov>

	* GenericFunctions: latest changes from Joe Boudreau
	* Matrix: cleanup for -Wextra

2012-05-11 Lynn Garren <garren@fnal.gov>

	* Vector, Evaluator, Random, Geometry: use explicit std:: with math functions

==============================
14.02.12 Release CLHEP-2.1.2.2
==============================

2012-02-14  L. Garren  <garren@fnal.gov>

	* cmake/Modules/ClhepVariables.cmake: 
	  make sure config files are executable
	  add clhep_package_config_no_lib()

==============================
06.02.12 Release CLHEP-2.1.2.1
==============================
2012-02-03  Lynn Garren <garren@fnal.gov>

	* Random/src/Ranlux64Engine.cc: use a template to get rid of the warnings

2012-02-02  Lynn Garren <garren@fnal.gov>

	* GenericFunctions/GenericFunctions/ClassicalSolver.hh: make destructor virtual
	* GenericFunctions/src/PhaseSpace.cc: fix typo, 
	  GenFun::Variable index() returns unsigned int, not double
	* GenericFunctions/src/InterpolatingPolynomial.cc: deal with int comparison

2012-02-02 Lynn Garren <garren@fnal.gov> 

	* Vector, Geometry, Random, Matrix, Exceptions : 
	  change the names of internal variables so -Wshadow does not complain

2012-01-31 Lynn Garren <garren@fnal.gov> and Mark Fischler <mf@fnal.gov>

	* Evaluator/src/Evaluator.cc: fix a problem with unary +/- and exponentials
	* Evaluator/test/testBug90848.cc: new test for bug #90848

==============================
16.12.11 Release CLHEP-2.1.2.0
==============================

2011-12-15 Lynn Garren <garren@fnal.gov>

	* cmake is now the preferred build option
	* building with autotools and configure is deprecated
	* you MUST use cmake when building with clang and other exotic compilers

	* various improvements to the cmake build from Ben Morgan (Warwick)
	* to build documents, call cmake with -DCLHEP_BUILD_DOCS=ON
	* lib/CLHEP-<version> contains cmake files for use by find_package 
	* lib/pkgconfig contains clhep.pc 	

==============================
29.07.11 Release CLHEP-2.1.1.0
==============================

2011-07-12 Lynn Garren <garren@fnal.gov>

	* cmake/Templates/ClhepVersion.h.in: cmake template for ClhepVersion.h

2011-07-11 Lynn Garren <garren@fnal.gov>

	* CMakeLists.txt: adding the ability to build with cmake
	* cmake/Modules: utility macros for cmake

2011-06-06 Lynn Garren <garren@fnal.gov>

	* clhep-config: Since the clhep installation may have been relocated,
	  use the full path to clhep-config to get the install prefix.
	  Note that this presumes that bin, lib, and include are all under 
	  the same $prefix.

2011-05-27  Mark Fischler <mf@fnal.gov> and Lynn Garren <garren@fnal.gov>

	* Random/Random/RandSkewNormal.h, Random/Random/RandSkewNormal.icc, 
	  Random/src/RandSkewNormal.cc: An implementation of the Azzalini 
	  skew-normal distribution, as requested in bug #75534

==============================
11.11.10 Release CLHEP-2.1.0.1
==============================

2010-10-25  Lynn Garren <garren@fnal.gov>

	* Random/Random/NonRandomEngine.h, Random/Random/RandomEngine.h, 
	  Random/Random/RandomEngine.icc, Random/src/RandomEngine.cc: minor 
	  changes to avoid compilation warnings when using the -W flag

2010-10-21  Mark Fischler <mf@fnal.gov> and Lynn Garren <garren@fnal.gov>

	* Random/src/Ranlux64Engine.cc: fix problem with random numbers when 
	  seed is greater than 32bits
	* Random/test/testBug73093.cc: test for the Ranlux64Engine problem

==============================
23.07.10 Release CLHEP-2.1.0.0
==============================

2010-07-23  Lynn Garren <garren@fnal.gov>

	* renamed configure.in to configure.ac in all packages

2010-07-22  Lynn Garren <garren@fnal.gov>

	* GenericFunctions/src/AnalyticConvolution.cc: 
	  replace finite with std::isfinite (for MacOSX)
	  use _finite from float.h if _WIN32 (for VC++)

2010-06-30  Lynn Garren <garren@fnal.gov>

	* Random/src/Hurd160Engine.cc, Hurd288Engine.cc: deal with an 
	  undefined order of execution warning reported by gcc 4.5

2010-06-29  Mark Fischler <mf@fnal.gov>

	* Evaluator/src/Evaluator.cc: Improve the logic so that unary plus 
	  and minus work as expected.  See bug report #66214.

2010-06-28  Lynn Garren <garren@fnal.gov>

	* Evaluator/Evaluator/Evaluator.h: Add error_name() method to 
	  return the error as a string

	* Evaluator/test/testBug66214.cc: Test unary operator bug (report #66214)

2010-06-23  Mark Fischler <mf@fnal.gov> and Lynn Garren <garren@fnal.gov>

	* Random/Random/RanecuEngine.h: add a private method (see below)
	* Random/src/RanecuEngine.cc: Modify constructor and setSeed to utilize all 
	  info provided and avoid coincidence of same state from different seeds                        
	* Random/test/testRanecuSequence.cc: test for repeating sequences

2010-03-09  Lynn Garren <garren@fnal.gov>

	* GenericFunctions/src/RKIntegrator.cc: 
	  Add parentheses to fix a VC++ warning

==============================
16.06.10 Release CLHEP-2.1.0.0.b01
==============================

2009/06/26  boudreau

	*  GenericFunctions/src/AnalyticConvolution.cc: 
	   add protection to gauss and exp

2008/11/19  boudreau

	*  GenericFunctions/GenericFunctions/CutBase.icc: fix compiler warnings

2007-01-23  boudreau

	*  GenericFunctions/src/AnalyticConvolution.cc: patch for sigma=0

2007/01/21  boudreau

	*  GenericFunctions/GenericFunctions/AbsFunction.hh: 
	   use new ParameterComposition
	*  GenericFunctions/GenericFunctions/Bessel.icc: 
	   bug fix (remove extra "inline")

	*  GenericFunctions: added Airy.hh Gamma.hh GammaDistribution.hh 
	   KroneckerDelta.hh Legendre.hh ParameterComposition.hh 
	   SymToArgAdaptor.hh

==============================
11.06.10 Release CLHEP-2.0.5.0.b01
==============================

2010-06-11  Lynn Garren <garren@fnal.gov>

	* CLHEP now uses the LGPL license.

	* Matrix: inline virtual functions are now only virtual and not inline

2010-04-29  Lynn Garren <garren@fnal.gov>

	* Random now depends on Utility

2010-03-19  W. E. Brown  <wb@fnal.gov>

	- New package Utility, inspired by useful bits of C++0X and Boost

2009-08-25  Lynn Garren <garren@fnal.gov>

	* Vector/ThreeVector: Each constructor possibility is now a separate
	  instance to avoid confusion if Hep3Vector is in the constructor of 
	  another function. 

==============================
09.03.10 Release CLHEP-2.0.4.6
==============================

2010-03-09  Lynn Garren <garren@fnal.gov>

	* GenericFunctions/src/RKIntegrator.cc: 
	  Add parentheses to fix a VC++ warning


2010-03-08  Mark Fischler <mf@fnal.gov> and Lynn Garren <garren@fnal.gov>

	* Random/src/RandEngine.cc: Cast RAND_MAX to unsigned long to avoid 
	  gcc 4.4 warnings.

	* Random/src/RanecuEngine.cc: Fix a bug introduced in 2.0.4.5/1.9.4.5 
	  which resulted in the inability to rollback the random state.
	* Random/test/testBug58950: test rolling back the random state

==============================
08.12.09 Release CLHEP-2.0.4.5
==============================

2009-12-07  Lynn Garren <garren@fnal.gov>

	* Random/test/testBug58950.cc: test for the 64bit bug

2009-12-01  Mark Fischler <mf@fnal.gov> and Lynn Garren <garren@fnal.gov>

	* Random/src/RanecuEngine.cc: Negative seeds are not allowed.  In the past,
	  negative seeds were ignored, resulting in a reproducable sequence.
	  Instead, we now use the absolute value of any negative seeds.

2009-12-01  Mark Fischler <mf@fnal.gov> and Lynn Garren <garren@fnal.gov>

	* Random/Random/RanecuEngine.h, Random/src/RanecuEngine.cc: define 
	  maxSeq as a static const int since it contains the size of an array
	* Random/src/RanecuEngine.cc: ensure that all seeds are in the expected 32bit range.

==============================
12.11.09 Release CLHEP-2.0.4.4
==============================

2009-11-10  Lynn Garren <garren@fnal.gov>

	* GenericFunctions/src/Gaussian.cc, BivariateGaussian.cc, PtRelFcn.cc, 
          TrivariateGaussian.cc: protect against M_PI in cmath

        * Matrix/test/testBug7328.cc:  allow for heap collection before testing
	* Matrix/configure.in, Matrix/test/Makefile.am: finer control over testBug7328 

	* Exceptions/test/exctest2.cc, exctest3.cc: improve ansi compliance

2009-11-04  Lynn Garren <garren@fnal.gov>

	* GenericFunctions/GenericFunctions/Bessel.icc, EllipticIntegral.icc: 
	  replace math.h with cmath

==============================
03.11.09 Release CLHEP-2.0.4.4.b01
==============================
2009-11-03  Lynn Garren <garren@fnal.gov>

	* */src/Makefile.am: use -L<path> -l<library> for dependencies 

2009-08-25  Lynn Garren <garren@fnal.gov>

	* configure.in, */configure.in: remove old -lcxa -lunwind icc flags

==============================
04.07.09 Release CLHEP-2.0.4.3
==============================
2009-06-30  Lynn Garren <garren@fnal.gov>

	* configure.in, */configure.in, */src/Makefile.am: Make sure that
	the shared library build picks up package dependencies. 

==============================
18.11.08 Release CLHEP-2.0.4.2
==============================
2008-11-18  Lynn Garren <garren@fnal.gov>

	* Random/test/testVectorSave.cc: Add a test for bug #44156
	
	* clhep-config.in, */*-config.in: get rid of undefined symbols

2008-11-13  Mark Fischler <mf@fnal.gov>

	* Random/src/engineIDulong.cc: Fix problem that caused check for proper
	engine type to fail where an unsigned long is 64bits. (bug #44156)
	* Random/src/*Engine.cc: make sure that existing stored engine states 
	don't break due to the change in engineIDulong.cc

==============================
04.11.08 Release CLHEP-2.0.4.1
==============================
2008-11-04  Lynn Garren <garren@fnal.gov>

	* Units/PhysicalConstants.h: update Avogadro, h_Planck, electron_mass_c2,
	  proton_mass_c2, amu_c2, and k_Boltzmann to PDG 2008 values
	* Units/SystemOfUnits.h: update e_SI to PDG 2008 value
	* Units.tex: update for modern LaTeX

==============================
07.08.08 Release CLHEP-2.0.4.0
==============================
2008-08-06  Lynn Garren <garren@fnal.gov>

	* configure.in, Makefile.am, build-header.in: automatically
	create ClhepVersion.h during the build proceedure
	Version information is available as integers and the full string.

2008-07-17  Lynn Garren <garren@fnal.gov>

	* various changes in Random to keep gcc 4.3 happy
	
2008-07-16  Lynn Garren <garren@fnal.gov>

	* Matrix/src/SymMatrix.cc, Matrix.cc, DiagMatrix.cc, MatrixLinear.cc: 
	Iterators were set to a nonexistent memory location in many places.
	Even though the iterators were not used, this operation is not allowed 
	and causes problems with the newer VC++ compilers.  
	In some cases, a more efficient rewrite was possible.

==============================
01.05.08 Release CLHEP-2.0.3.3
==============================
2008-05-01  Lynn Garren <garren@fnal.gov>

	* */test/Makefile.am: use "/Fo$@" instead of "-o $@" for Visual C++

2008-04-30  Lynn Garren <garren@fnal.gov>

	* configure.in: VC++ compiler flag -GX is replaced by -EHsc
	  icc compiler flag -mp is replaced by -fp-model precise
	  remove KCC from list of C++ compilers

2008-04-29  Lynn Garren <garren@fnal.gov>

	* Units/PhysicalConstants.h: update h_Planck, electron_mass_c2,
	proton_mass_c2, neutron_mass_c2, and amu_c2 to PDG 2006 values
	* Units/SystemOfUnits.h: update e_SI to PDG 2006 value

==============================
18.10.07 Release CLHEP-2.0.3.2
==============================
2007-10-18  Mark Fischler <mf@fnal.gov>

	* RandPoissonQ.cc:  Change fire(mena) to call 
	  		    shoot(theLocalEngine(),mean) instead of
			    shoot(mean), which had caused "cross-talk" between
			    modules that should not have affected eah other.

==============================
15.11.06 Release CLHEP-2.0.3.1
==============================
2006-11-15  Lynn Garren <garren@fnal.gov>

	* configure.in: change ordering of possible C++ compilers so that
	                g++ remains the default compiler if icc is in the path

==============================
18.10.06 Release CLHEP-2.0.3.0
==============================
2006-10-13  Lynn Garren <garren@fnal.gov>

	* configure.in: build only static libraries when using gcc with cygwin

2006-10-05  Lynn Garren <garren@fnal.gov>

	* configure.in: add flags for the Intel compiler (icc)

2006-09-29  Lynn Garren <garren@fnal.gov>

	* configure.in. Makefile.am: stop building HepMC, HepPDT, and StdHep

==============================
20.06.06 Release CLHEP-2.0.2.3
==============================
2006-05-17  Lynn Garren <garren@fnal.gov>

	* configure.in: add support for g++4

2006-05-14  Andreas Pfeiffer <andreas.pfeiffer@cern.ch>

	* configure.in: add changes from Gabriele Cosmo for MacOSX

==============================
21.11.05 Release CLHEP-2.0.2.2
==============================
2005-11-21  Lynn Garren <garren@fnal.gov>

	* Makefile.am: Library for Windows Visual C++ is named CLHEP.lib.

2005-11-17  Lynn Garren <garren@fnal.gov>

	* configure.in: Remove check for sstream so Windows will not generate
	spurious complaint.  
	Remove HepPDT/StringStream.h.  Remove Cast/StringStream.h.

2005-11-14  Lynn Garren <garren@fnal.gov>

	* Vector/RotationInterfaces.h: Instantiate private destructors so that 
	dictionary builders will not complain.

2005-11-04  Lynn Garren <garren@fnal.gov>

	* HepPDT/addEvtGenParticles.cc: Bug fix

2005-11-03  Lynn Garren <garren@fnal.gov>

	* Vector/configure.in, LorentzVector.icc
	Provide a flag to enable code differences when compiling with 
	Visual C++.

2005-10-20  Lynn Garren <garren@fnal.gov>

	* HepPDT/CommonParticleData.icc: Bug fix - low and high cutoffs 
	for the width were not being saved.
	* Also write out cutoffs.

2005-07-27  Lynn Garren <garren@fnal.gov>

	* HepPDT/convertTemporaryMap.icc: Fill DecayData properly.
	Also get proper particle names when parsing PDG table.

==============================
22.06.05 Release CLHEP-2.0.2.1
==============================
Wed Jun 22 2005  Andreas Pfeiffer  <andreas.pfeiffer@cern.ch>

	* configure.in: changed soname to install_name for darwin targets,
	dylibs still don't build properly on 10.3/10.4, static libs ok.

2005-06-19  Lynn Garren <garren@fnal.gov>

	* configure.in, Makefile.am: 
	Use lib when building Visual C++ libraries.
	Disable shared library build for Solaris CC.

==============================
22.04.05 Release CLHEP-2.0.2.0
==============================
Fri Apr 22 2005  Andreas Pfeiffer  <andreas.pfeiffer@cern.ch>

	* configure.in: changed flags for building dynamic libs on Mac OS X
	still problems building them for OS X 10.3, to be checked on 10.4
	prepared for tagging release 1.9.2.0

Thu Apr  7 2005 Lynn Garren <garren@fnal.gov>

	* configure.in: set AR and ARFLAGS

2005-03-15  Lynn Garren  <garren@fnal.gov>

	* examples are now installed 

2005-03-15  Mark Fischler <mf@fnal.gov>

	* engineIDulong.cc, engineIDulong.h
	  DoubConv.cc, DoubConv.h
	  EngineFactory.cc, ranRestoreTest.cc
	  all Random Engine classes

	Add put() and get() methods to every engine transfering state to a
	vector of unsigned longs.
	
Thu Mar 10  2005  Andreas Pfeiffer  <andreas.pfeiffer@cern.ch>

	* Geometry/BasicVector3D.h : added operator to convert to Hep3Vector
	for backward compatibility (savannah bug id 6740)
	* Geometry/config.in, Geometry/test/testBug6740.cc, Geometry/test/testBug6740.sh,
	Geometry/test/testBug6740.output, Geometry/test/Makefile.am: added test for bug ID 6740
	
2005-02-14  Mark Fischler <mf@fnal.gov>

	* JamesRandom.cc
	
	  Check that seed is non-negative. 
	  Negative seeds give terrible sequences.

2005-02-11  Mark Fischler <mf@fnal.gov>

	* RandPoissonQ.cc RandPoissonT.cc RandomEngine.cc
	
	  Added missing implementations, per bug # 1806
	  (FireArray(), shootArray(), getTableSeeds)

2005-03-15  Mark Fischler  <mf@fnal.gov>

	* SymMatrix.cc, testBug7328.cc
	
	Repair of bug 7328, a memory leak encountered when inverting symmetric
	matrices above the size of 6x6.
	
2005-02-25  Mark Fischler  <mf@fnal.gov>

	* Matrix.cc, testBug6181.cc
	
	Repair of bug 6181, a serious error in inverting matrices above the
	size of 6x6.  

2005-02-18  Lynn Garren  <garren@fnal.gov>

	* configure.in, Makefile.am: Stop using libtool.  
	The newer releases of libtool seem to have dropped support for 
	Windows Visual C++.  

2005-02-14  Lynn Garren  <garren@fnal.gov>

	* */configure.in: Visual C++ flags are now "-EHsc -nologo -GR -GX -MD"

2005-02-03  Lynn Garren  <garren@fnal.gov>

	* configure.in: install step creates libCLHEP.a, libCLHEP.so,
	and/or libCLHEP.dylib by adding a symbolic link.

	* HepMC/GenParticle.h: define HepMC::GenParticle::setParticleID 

	* HepPDT: define HepPDT::QQDecayTable::writeTable,
	HepPDT::QQChannel::write, and HepPDT::QQDecay::write

2005-02-02  Andreas PFEIFFER  <andreas.pfeiffer@cern.ch>

	* */configure.in: modified compiler flags for windows:
	added "-O -GR -GX -MD" as this is needed for the multi-thread
	environments used.

2005-02-01  Lynn Garren  <garren@fnal.gov>

	* config: remove HEP_CC_NEED_SUB_WITHOUT_CONST from config/CLHEP.h.
	HEP_CC_NEED_SUB_WITHOUT_CONST has been defined to 1 in all cases for
	a long time.

	* Matrix: remove HEP_CC_NEED_SUB_WITHOUT_CONST ifdefs

2005-02-01  Andreas PFEIFFER  <andreas.pfeiffer@cern.ch>

	* Geometry/Geometry/BasicVector3D.h : changed template specialisations for 
	multiplication of vector<float> with scalar and division of vector<float>
	by scalar to use float scalars instead of double (savannah bug id 6523)

2005-01-31  Andreas PFEIFFER  <andreas.pfeiffer@cern.ch>

	* Matrix/src/Matrix.h: fixed error in sub(int, int, int, int), savannah 
	bug id 6176, added corresponding files (testBug6176*) in test/,
	updated Makefile.am accordingly to generate tests.

Mon Dec 27	2004 Mark Fischler <mf@fnal.gov>

	* *.cc  and .h for all the engine classes.
	* Random.cc EngineFactory.cc StaticRandomStates.cc

	Ability to restore engines and distributions without knowing in
	the restoring program which type of engine was used in the saving
	program.

Wed Dec 22	2004 Mark Fischler <mf@fnal.gov>

	* Random.h StaticRandomState.h Random.cc StaticRandomState.cc
	
	Added HepRandom::saveStaticRandomState(ostream) and restore to istream. 

Mon Dec 20	2004 Mark Fischler <mf@fnal.gov>

	* Random.h RandGauss.h RandFlat.h RandFlat.icc RandBit.h
	  Random.cc RandGauss.cc RandFlat.cc

	  Added static methods for save/restore to streams.

Thu Dec 16	2004 Mark Fischler <mf@fnal.gov>

	* Random/*.cc for all engines and distributions. 	  
	* Random/test/ranRestoreTest.cc 
	  
	  Added put and get methods, as well as ostream operations, so that
	  engine and distribution instances can be saved and restored to/from
	  streams.
	  
Thu Dec 16
Wed Dec 15	2004 Mark Fischler <mf@fnal.gov>

	* RandPoissonQ.cc (RandPoissonT.cc)
	
	  RandPoissonQ has a path, potentially taken when mean is more
	  than 100, where an additional gaussian random number is needed.
	  Instead we use the engine owned by the RandPoissonQ instance.
	  
	  This will affect in rare cases the values of random variates 
	  delivered by **instances** (not the shoot() methods) of RandPoissonQ
	  and RandPoissonT.

Thu Dec 16
Tue Dec 14	2004 Mark Fischler <mf@fnal.gov>

	* RandGeneral.cc 
	
	  Modify local variable theIntegralPdf, using a std::vector instead
	  of a double* pointing to a new-ed array.  No behavioral change.
	  
Thu Dec 16
Fri Dec 3	2004 Mark Fischler <mf@fnal.gov>

	* Random/*.cc for all engines
	* Random/test/ranRestoreTest.cc
		Modified engines and additional-state distributions so that
		restoreENgineState behaves better (error message and return
		instead of hang up) when file requested is not found.

==============================
30.11.04 Release CLHEP-2.0.1.2
==============================

Tue Nov 30   2004 Andreas Pfeiffer <andreas.pfeiffer@cern.ch>

	* Geometry/Plane3D.h: replaced wrong <float> by <T> in
	Point3D<T> point(const Point3D<float> & p) const {

Mon Nov 29 2004 Mark Fischler <mf@fnal.gov>

	* In LorentzVectorC.cc, in deltaR, fixed to use pp.deltaRPhi(w.getV())

Mon Nov 29 2004 Lynn Garren <garren@fnal.gov>

	* Vector/src: add missing implemetations  
	
Fri Nov 26 2004	    Andreas Pfeiffer <andreas.pfeiffer@cern.ch>

	* HepMC/doc/Makefile.in: add -o option to dvips, otherwise it 
	  prints on some systems
	
==============================
27.10.04 Release CLHEP-2.0.1.1
==============================

Wed Oct 27          2004 Andreas Pfeiffer <andreas.pfeiffer@cern.ch>

      * Geometry/BasicVector3D.h: made dtor virtual as this is a base class
      * Geometry/Transform3D.h: added virtual dtor for persistency. This may go away in later releases.


Fri Sep 24          2004 Lynn Garren <garren@fnal.gov>

	* use AM_CXXFLAGS
	* require autoconf 2.59, automake 1.9.1, and libtool 1.9b

	* Matrix: remove unnecessary copy and disable allocator

Tue Aug 31         2004 Lynn Garren <garren@fnal.gov>
	
	* change Solaris CC compile flags from "-O -mt" to "-O"
	* libtools 1.9b or later is required for Solaris CC


==============================
23.07.04 Release CLHEP-2.0.1.0
==============================

Fri Jul 23         2004 Lynn Garren <garren@fnal.gov>

	* remove obsolete Utilities from 2.0 to avoid confusion
	
	* more changes for Solaris tests

	* HepPDT version is 1.01.00
	* HepPDT: access ParticleData information by name (std::string)

Wed May 19         2004 Lynn Garren <garren@fnal.gov>
    
	* HepPDT: fix bugs in translation
	* HepPDT: add translation tests
	
	* a couple of miscellaneous changes for Solaris

==============================
11.05.04 Release CLHEP-2.0.0.2
==============================

Tue May 11          2004 Lynn Garren <garren@fnal.gov>

	* tagged for CLHEP 2.0.0.2 (CLHEP_2_0_0_2)
	* library version changed to 2.0.0.2
       
Tue May 11          2004 Lynn Garren <garren@fnal.gov>
       
	* HepMC 1.25 changes merged with CLHEP/HepMC
	* HepMC/HepMC/CBhepevt.icc: include stdio.h
	* HepMC/HepMC/CBherwig.icc: include stdio.h
	
	note that CLHEP/HepMC already had the most important change to use
	std::iterator<std::forward_iterator_tag,GenParticle*,ptrdiff_t>

Tue May 11          2004 Mark Fischler <mf@fnal.gov>

	*  RandPoissonT.cc
	*  RandPoissonQ.cc
	
	Repaired misbehavior when mean is precisely 100.0 in these routines. 

Thu Apr 29          2004 Mark Fischler <mf@fnal.gov>

	*  LorentzVectorK.cc 
	
	Modified behavior when rapidity of a light-like vector moving 
	in the -z direction is taken.  Previously, would have tried to take
	log(0.0). 
	
Thu Apr 29          2004 Mark Fischler <mf@fnal.gov>

	* RandEngine.cc
	* RandEngine.h
	
	Code to accomodate possible systems where RAND_MAX is not
	one fo the two "expected" values of 2**15-1 or 2**31-1. 

Wed Apr 28          2004 Lynn Garren <garren@fnal.gov>

	*  make CLHEP work with Visual C++

Wed Apr 21          2004 Lynn Garren <garren@fnal.gov>

	* change version to CLHEP 2.0.0.1
	
	* fix Herwig and Isajet translation routines in HepPDT
	  add translation checking tests

Thu Nov 06          2003 Lynn Garren <garren@fnal.gov>

	*  adding ZOOM Exceptions package for FNAL
	*  adding supporting RefCount and Cast packages

Fri Oct 24          2003 Lynn Garren <garren@fnal.gov>

	* tagged for CLHEP 2.0.0.0
	
	* backwards compatibility code disabled

Thu Oct 23          2003 Lynn Garren <garren@fnal.gov>

	* tagged for CLHEP 1.9.0.0
	
	* backwards compatibility code enabled
	
Fri Oct 10          2003 Mark Fischler <mf@fnal.gov>

	* ZMxpv.h and ZMxpv.cc
	
	Modified the ZZMthrowA and ZMthrowC macros such that the package
	never calls exit(), throwing an exception instead.  Existing code
	in entire package was already instrumented to throw the various
	exceptions. 
	
	* Boost.h and Boost.icc and Boost.cc
	
	Correct a typo in Boost::vectorMutiplication() [that is, boost*4vector].
	This affected off-axis boosts applied to a LorentzVector when the 
	x- and/or y- components of both the Boost and the LorentzVector are 
	not small. Boosts in the z-direction are unaffected and Boosts 
	dominantly in the z-direction suffered only second-order effects. 

	Repair a bug in LorentzVector::deltaR() which could return large 
	values when the phi values are close to + and - pi respectively,
	for two vectors which are actually near each other.
	
	Rectify misbehaviour when isNear() is taken between a specialized
	or general Boost and a general LorentzRotation.
	
	Supply output operator.

	* BoostX.cc, BoostY.cc, BoostZ.cc
	
	Rectify misbehaviour when isNear() is taken between a specialized
	or general Boost and a general LorentzRotation.

	Supply output operators.
	
	* LorentzRotation.cc
	
	Multiplication by specialized rotations

	More efficient multiplicatio by a rotation

	*LorentzVectorC.cc

	Correction in isNear for two vectors both close to -Z axis.
	
	* RotationE.cc	
	
	Methods to find EUler angles phi() and psi() now forgiving of
	cos phi apparently slightly above 1 due to roundoff error.

Fri Oct 10          2003 Lynn Garren <garren@fnal.gov>

	* HepMC 1.24 changes merged with CLHEP/HepMC

Tue Jul 22 17:40:39 CDT 2003  Lynn Garren <garren@fnal.gov>

	* Alpha release of the CLHEP split
	* Directory structure has changed
	* Each package may be built either separately, or as part of CLHEP

Mon May  5 10:32:18 2003 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/BasicVector3D.h,Normal3D.h,Plane3D.cc,Plane3D.h,Point3D.h:
	* Geometry/Transform3D.cc,Transform3D.h,Vector3D.h:
	* Geometry/BasicVector3D.cc,Normal3D.cc,Point3D.cc (Added):
	* Geometry/Transform3D.icc,Vector3D.cc (Added):

	Template implementation of Point3D<T>, Vector3D<T> and Normal3D<T>.

	* test/testBasicVector3D.cc:
	* test/testBasicVector3D.input,testBasicVector3D.out.save:

	New (rather complete) test for basic geometrical classes.

	* test/Makefile.in:

	Use diff -w to avoid problems on Windows.

Thu May  1 11:18:49 2003 Mark Fischler <mf@fnal.gov>

	* Vector/RotationE.cc:

	This modifies the eulerAngles() method to address a flaw
	pointed out by A. Skiba:  When the rotation matrix for a HepRotation
	was slightly perturbed due to accumulated roud-off error, and the
	rotation was very nearly but not exactly about the Z axis, the
	Euler angles computed could be incorrect in the sense that
	reconstructing a HepRotation from them would give a significantly
	different rotation.

	The new algorithm is much more numerically stable, and handles these
	cases better.

	* Vector/doc/eulerAngleComputation.tex:

	This file gives mathematical detail of the problem and the algorithm
	used to improve the numerical stability.

	* Vector/test/eulerProb.cc,eulerTest.cc (Added):

	The original program submitted by Skiba to exhibit numerical
	instability in eulerAngles() method, and a program to significantly
	excercise many different cases to verify that the improved method
	does give accurate results in the difficult and easy cases.

Wed Jan 22 16:35:11 2003 Lynn Garren <garren@fnal.gov>

	* HepMC/GenParticle.h,GenVertex.h:
	* HepMC/particleHas.cc,particleNum.cc (Added):
	* HepMC/vertexHas.cc,vertexNum.cc (Added):

	added (by request) numChildren(), numParents(), hasChildren(),
	and hasParents() methods to HepMC::GenVertex and HepMC::GenParticle.
	
	* HepMC/GenParticle.cc:

	don't attempt to print address of non-existent vertex pointer

	* HepMC/examples/GNUmakefile: minor improvements
	* HepMC/examples/testMethods.cc: testing new utility methods
	* HepMC/doc/HepMC_user_manual.ps: CLHEP revision
	
Tue Jan 14 10:30:44 2003 Lynn Garren <garren@fnal.gov>

	* HepPDT/TableBuilderT.hh:
	* HepPDT/examples/examMyPDT.cc: use map.erase

Wed Dec  4 13:45:54 2002 Lynn Garren <garren@fnal.gov>

	* StdHep/printVersion.cc:

	use string.h since the version must be accessable from C

Sun Nov 24 16:03:56 2002 Joe Boudreau <boudreau@fnal.gov>

	* GenericFunctions/GSLMetaProxy.c,GSLMetaProxy.h (Removed): 
	* GenericFunctions/Bessel.hh,EllipticIntegral.hh,SphericalBessel.hh:
	* GenericFunctions/SphericalNeumann.hh:
	* GenericFunctions/Bessel.cc,EllipticIntegral.cc,SphericalBessel.cc:
	* GenericFunctions/SphericalNeumann.cc:

	Finally got rid of the MetaProxy scheme in favor of something
	much simpler suggested a long time ago by Evgueni.. Namely
	putting all the code that calls GSL into .icc files.
	That makes CLHEP independent of the external package
	but user code will develop a dependency as soon as it includes
	either the Bessels, the Spherical Bessels/Neumanns, or
	the Elliptic Integrals.

Mon Oct 28 15:07:43 2002 Mark Fischler <mf@fnal.gov>

	* GenericFunctions/Psi2Hydrogen.cc:

	Correct a warning about double to int, caused by using a 1.0
	in an expression being used as int argument to factorial. 

Thu Oct 10 16:33:48 2002 Joe Boudreau <boudreau@fnal.gov>

	* GenericFunctions/Psi2Hydrogen.cc,Psi2Hydrogen.hh (Added):

	Added Hydrogenic Wavefunctions

	* GenericFunctions/Abs.cc,Abs.hh (Added):

	Added Absolute value functions

	* GenericFunctions/Variable.cc,Variable.hh:

	Brought the variable class up to date with the FNAL repository
	version where most of the development work has been taking place
	till now

	* GenericFunctions/Parameter.cc:

	Portability change in print method

	* GenericFunctions/ParamToArgAdaptor.icc:

	Removed numeric_limits class, use of which limits portability
	
Tue Oct  1 11:56:09 2002 Lynn Garren <garren@fnal.gov>

	* HepMC/doc/README, ChangeLog:
	
Tue Aug 27 10:11:14 2002 Mark Fischler <mf@fnal.gov>

	* Matrix/Matrix.cc:

	Fix a BUG that was in trace from time immemorial!

	Trace used to return the sum of the elements in the first column,
	rather than the sum of the diagonal elements.

	Warning:  This repair may change the behavior of some programs.
	I claim in those cases, the change is a correction.
	
Fri Aug  9 14:55:05 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Evaluator/Evaluator.cc:

	Fixed memory leak. Thanks to <Martin.Liendl@cern.ch>

Wed Jul 31 18:29:05 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Transform3D.cc,Transform3D.h:
	* test/testTransform3D.cc:

	Rewritten test for equality

Mon Jul 29 18:24:13 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Transform3D.cc,Transform3D.h:
	* test/testTransform3D.cc:

	 Added isNear() function

Fri Jul 26 16:11:29 2002 Lynn Garren <garren@fnal.gov>

	* HepMC/ParticleDataTableConfig.h: for osf1
	* HepMC/examples/exampleReadHepMC.cc: remove extraneous semicolon
	* HepMC/examples/GNUmakefile,example_UsingIterators.cc:

	use proper true/false instead of 1/0

Wed Jul 24 16:15:31 2002 Lynn Garren <garren@fnal.gov>

	* HepPDT/ParticleDataT.hh: explicitly include Constituent.hh
	* HepPDT/examples/examDMF.cc: fix for KCC

==============================
01.06.02 Release CLHEP-1.8.0.0
==============================

Fri May 31 12:57:30 2002 Lynn Garren <garren@fnal.gov>

	* HepPDT/Measurement.icc: inline better than static in this context

Fri May 31 14:34:54 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* HepPDT/DMFactory.hh,DMFactory.icc:

	Use MakerBase<Config> instead of typedefed MakerBase

	* GenericFunctions/Makefile.in:
	* StdHep/Makefile.in:

	Added *.icc to the header file list: HEADERS = *.hh *.icc

Thu May 30 18:51:37 2002 Lynn Garren <garren@fnal.gov>

	* HepMC/ConvertHEPEVT.h,Makefile.in:
	* HepMC/CBInterface.h,CBhepevt.h,CBhepevt.icc (Added):
	* HepMC/GenEventConvert.h,GenEventConvert.icc (Added):
	* HepMC/GenEventtoHEPEVT.icc,HEPEVTtoGenEvent.icc (Added):
	* HepMC/ConvertHEPEVT.cc,FIhepevt.cc,FIhepevt.h (Removed):
	* HepMC/GenEventtoHEPEVT.cc,HEPEVTtoGenEvent.cc,clean.cc (Removed):

	redesign interface to common blocks

	* StdHep/ConversionMethods.hh,combineEvents.cc,printVersion.cc:
	* StdHep/CBcm.hh,CBstdhep.hh,CBstdhep.icc,StdEventConvert.hh (Added):
	* StdHep/StdEventConvert.icc,StdHep.hh,StdHepfromStdEvent.icc (Added):
	* StdHep/StdHeptoGenEvent.icc,StdRunInfoConvert.hh (Added):
	* StdHep/StdRunInfoConvert.icc (Added):
	* StdHep/CollisionToStdTmp.cc,FIcm.cc,FIcm.hh,FIstdtmp.cc (Removed):
	* StdHep/FIstdtmp.hh,MultipleInteractionInfo.cc (Removed):
	* StdHep/RunInfoToSTDCM.cc,StdEventToHEPEVT.cc,cleantmp.cc (Removed):
	* StdHep/findInTemporaryMap.cc,getRunInfoFromSTDCM.cc (Removed):
	* StdHep/getStdEventfromHEPEVT.cc,setConsistencyCheck.cc (Removed):
	* StdHep/setTrustMothers.cc setupConversion.cc (Removed):

	redesign interface to common blocks

	* StdHep/examples/GNUmakefile,dummy.F,examHerwigToStdHep.cc:
	* StdHep/examples/examPythiaToStdHep.cc,readPythia.cc:
	* StdHep/examples/readPythiaHerwig.cc:

	redesign interface to common blocks

	* StdHep/include/stdtmp.inc (Added): need stdtmp.inc

Wed May 29 17:08:23 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: alpha-dec-osf* --> alpha*-dec-osf*
	* test/testHepPDT.cc: use namespace for HepPDT::addPDGParticles()

Tue May 28 17:46:34 2002 Lynn Garren <garren@fnal.gov>

	* HepPDT/DMFactory.icc,ParticleDataTableT.icc: add typename
	* HepPDT/ParticleDataTableT.icc: got one extra typename
	
	* HepMC/GenEventtoHEPEVT.cc,HEPEVTtoGenEvent.cc (Restored):
	* StdHep/CollisionToStdTmp.cc,MultipleInteractionInfo.cc (Restored):
	* StdHep/RunInfoToSTDCM.cc,StdEventToHEPEVT.cc (Restored):
	* StdHep/getRunInfoFromSTDCM.cc,getStdEventfromHEPEVT.cc (Restored):

	restore necessary files

Mon May 27 15:07:16 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* GenericFunctions/AbsFunction.hh,AbsParameter.hh:

	The copy constructors are now public rather than private.
	It has been done to avoid multiple warnings on Sun Solaris.
	An example of the compiler message:

	"ACos.cc", line 33: Warning (Anachronism):
	Genfun::AbsFunction::AbsFunction(const Genfun::AbsFunction&) is not
	accessible from Genfun::ACos::partial(unsigned) const.
	1 Warning(s) detected. 

Sun May 26 11:44:07 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* HepMC/DummyDecayModel.h:

	Added empty implementation of ~DummyDecayModel()

	* HepMC/FIhepevt.h,FIhepevt.cc:

	Implementation of instance() has been moved to the header

	* HepMC/GenEventtoHEPEVT.cc,HEPEVTtoGenEvent.cc (Removed):

	Use of FIhepevt::instance() does not allow to create usable
	shared library

	* StdHep/FIcm.hh,FIcm.cc,FIstdtmp.hh,FIstdtmp.cc:

	Implementation of instance() has been moved to the header

	* StdHep/CollisionToStdTmp.cc,MultipleInteractionInfo.cc (Removed):
	* StdHep/RunInfoToSTDCM.cc,StdEventToHEPEVT.cc (Removed):
	* StdHep/getRunInfoFromSTDCM.cc,getStdEventfromHEPEVT.cc (Removed):

	Use of FIcm::instance() and FIstdtmp::instance() does not allow
	to create usable shared library

Sat May 25 10:03:13 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/RandStudentT.cc,RandStudentT.h:

	Added #include <float.h>
	HUGE_VAL --> DBL_MAX

	On Apple/Darwin HUGE_VAL is defined to 1e500 and
	g++ compiler complains that floating point number exceeds
	range of `double'
	
Fri May 24 17:07:39 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in:

	Added cygwin
	Disabled HepPDT, HepMC and StdHep on Windows

Fri May 24 14:44:32 2002 Mark Fischler <mf@fnal.gov>

	* Vector/Rotation.cc,RotationA.cc,RotationE.cc,RotationX.cc:
	* Vector/RotationY.cc,RotationZ.cc:

	Protection against taking acos(>1.0000) in cases where
	roundoff has caused a matrix element to become greater than 1.

Tue May 21 10:33:42 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/istream.h,ostream.h (Removed):

	<istream> and <ostream> are absent on Macintosh:
	use iostream.h instead

Mon May 20 12:39:57 2002 Lynn Garren <garren@fnal.gov>

	* HepPDT/test/testHepPDT.cc,testHepPDT.out.save (Removed):

	test has been moved

	* HepPDT/test/Makefile.in:

	only testPID remains

	* HepMC/ReadHepMC.h,WriteHepMC.h:
	* HepMC/examples/GNUmakefile:

	use iostream instead of istream or ostream

	* StdHep/ConversionMethods.hh,ReadStdHep.hh,StdEvent.hh,WriteStdHep.hh:
	* StdHep/print.cc,printVersion.cc,tree.cc:

	use iostream instead of istream or ostream

	* StdHep/ConversionMethods.hh,Makefile.in:
	* StdHep/CollisionFromC.cc,CollisionToC.cc,StdEventC.h (Removed):
	* StdHep/StdEventToC.cc,getStdEventFromC.cc (Removed):

	to avoid confusion, remove StdEventC.h until it works properly
	
Mon May 20 19:13:18 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* StdHepC++ (Removed):

	Obsolete StdHepC++ has been removed

	* doxygen/config.doxygen,modules.doc:

	StdHepC++ --> StdHep

	* test/Makefile.in:
	* test/testHepPDT.cc,testHepPDT.out.save (Added):

	Added test for HepPDT

	* configure.in: removed HepPDT/test/Makefile
	
Mon May 20 17:07:46 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/config.guess,config.sub,install-sh:

	More recent files for configure: support of Macintosh is included

	* configure.in: added support of Apple with PowerPC

	* Random/DRand48Engine.cc,drand48.src:

	Added support of Apple PowerPC

Fri May 10 12:32:25 2002 Lynn Garren <garren@fnal.gov>

	* StdHep/parseStdEventLine.cc,readBlockType.cc,readRunInfo.cc:
	* StdHep/parseStdEventLine.cc,readBlockType.cc,readRunInfo.cc:
	* StdHep/parseStdEventLine.cc,readBlockType.cc,readRunInfo.cc:

	need CLHEP/config/sstream.h header

	* HepMC/HepMCConfig.h,ReadHepMCBlockType.cc:
	* HepMC/ParticleDataTableConfig.h:

	remove unnecessary template instantiation

	* HepMC/examples/GNUmakefile,examplePythiaWriteHepMC.cc:

	remove unnecessary template instantiation

Thu May  9 11:15:49 2002 Lynn Garren <garren@fnal.gov>

	* StdHep/ConversionMethods.hh,Makefile.in:

	disable code using StdEventC.h for now

	* StdHep/examples/GNUmakefile: clean up KCC ti_files
	
Thu May  9 10:01:10 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* GenericFunctions/EllipticIntegral.CC (Added):

	Renamed EllipticIntegral.cc to EllipticIntegral.CC

	* GenericFunctions/Bessel.CC,SphericalBessel.CC,SphericalNeumann.CC:
	* GenericFunctions/Bessel.cc,EllipticIntegral.cc (Removed):
	* GenericFunctions/SphericalBessel.cc,SphericalNeumann.cc (Removed):

	See Bessel.CC, SphericalBessel.CC, SphericalNeumann.CC

	* GenericFunctions/ACos.cc,ACos.hh,ASin.cc,ASin.hh,ATan.cc,ATan.hh:
	* GenericFunctions/BivariateGaussian.cc,BivariateGaussian.hh:
	* GenericFunctions/DoubleParamToArgAdaptor.icc,EllipticIntegral.hh:
	* GenericFunctiopns/Exp.cc,IncompleteGamma.cc,ParamToArgAdaptor.icc:

	Added Id line

	* StdHep/CollisionFromC.cc,CollisionToC.cc,CollisionToStdTmp.cc:

	Detail --> StdHep::Detail

Wed May  8 13:46:50 2002 Mark Fischler <mf@fnal.gov>

	* GenericFunctions/DoubleParamToArgAdaptor.icc,ParamToArgAdaptor.icc:
	* GenericFunctions/ACos.cc,ACos.hh,ASin.cc,ASin.hh (Added):
	* GenericFunctions/ATan.cc,ATan.hh,Bessel.cc (Added):
	* GenericFunctions/EllipticIntegral.cc,EllipticIntegral.hh (Added):
	* GenericFunctions/SphericalBessel.cc,SphericalNeumann.cc (Added):

	Files that had been in ZOOM's CLHEP but were not in the CERN version.
	These have been brought up to date so as to work with the latest
	config.h (that is, HEP_BEGIN_NAMESPACE no longer appears, etc.)

Wed May  8 11:14:51 2002 Lynn Garren <garren@fnal.gov>

	* HepMC/GenEvent.h,GenVertex.h:

	use conditional typedefs for forward iterators
	
Wed May  1 15:32:04 2002 Lynn Garren <garren@fnal.gov>

	* StdHep/ReadStdHep.hh,StdEvent.hh,StdRunInfo.cc,StdRunInfo.hh:
	* StdHep/WriteStdHep.cc,WriteStdHep.hh,particle.cc,readRunInfo.cc:
	* StdHep/readStdComment.cc,readStdEvent.cc,readStdRun.cc:
	* StdHep/writeEventKey.cc,writeRunInfo.cc,writeStdComment.cc:
	* StdHep/StdEventPAncestors.cc,StdEventPChildren.cc (Added):
	* StdHep/StdEventPDescendants.cc,StdEventPParents.cc (Added):
	* StdHep/StdEventVAncestors.cc,StdEventVChildren.cc (Added):
	* StdHep/StdEventVDescendants.cc,StdEventVParents.cc (Added):
	* StdHep/StdEventVertex.cc,collision.cc,findBlockType.cc (Added):
	* StdHep/findNextStdEvent.cc,readBlockType.cc (Added):

	improve functionality

	* StdHep/examples/.cvsignore,GNUmakefile,bookhist.F:
	* StdHep/examples/examHerwigToStdHep.cc,examPythiaToStdHep.cc:
	* StdHep/examples/readPythia.cc,readPythiaHerwig.cc:
	* StdHep/examples/analyzeEvent.cc,analyzeEvent.hh (Added):

	improve functionality

	* HepMC/ReadHepMC.cc,ReadHepMC.h,ReadHepMCDetail.cc,WriteHepMC.cc:
	* HepMC/WriteHepMC.h,writeComment.cc:
	* HepMC/ReadHepMCBlockType.cc,ReadHepMCComment.cc (Added):
	* HepMC/ReadHepMCFindBlock.cc,ReadNextHepMC.cc (Added):

	improve functionality
	
	* HepMC/examples/examplePythiaWriteHepMC.cc,exampleReadHepMC.cc:

	improve functionality

Fri Apr 26 11:08:48 2002 Lynn Garren <garren@fnal.gov>

	* StdHep/examples/hwtran.F,lunhep.F,lutran.F,stdflhwxsec.F:
	* StdHep/examples/stdflpyxsec.F:

	use latest stdhep fortran routines

	* StdHep/CollisionFromC.cc,CollisionToC.cc,CollisionToStdTmp.cc:
	* StdHep/MultipleInteractionInfo.cc,findInTemporaryMap.cc:
	* StdHep/parseStdEventLine.cc,readRunInfo.cc,readStdComment.cc:
	* StdHep/readStdEventInfo.cc:

	use explicit namespace for detail methods

	* StdHep/StdEventC.h,StdEventToC.cc,StdHepVersion.h,StdRunInfo.cc:
	* StdHep/getRunInfoFromSTDCM.cc,readStdEvent.cc:

	fixes for gcc 3.0.x
	
=========================================
25.04.02 revised StdHep uses HepMC
=========================================

Thu Apr 25 16:13:27 2002 Lynn Garren <garren@fnal.gov>

	* HepMC/GenEvent.cc,GenEvent.h,ReadHepMCDetail.cc,WriteHepMC.cc:
	* HepMC/examples/IO_Ascii.cc:

	need to save random state as doubles

	* StdHep: added to the repository

	* Makefile.in,configure.in: rename StdHepC++ to StdHep

	* StdHep/CollisionFromC.cc,CollisionToC.cc (Added):
	* StdHep/CollisionToStdTmp.cc,ConversionMethods.hh (Added):
	* StdHep/FIcm.cc,FIcm.hh,FIstdtmp.cc,FIstdtmp.hh (Added):
	* StdHep/Makefile.in,MultipleInteractionInfo.cc,ReadStdHep.hh (Added):
	* StdHep/RunInfoToSTDCM.cc,StdEvent.cc,StdEvent.hh,StdEventC.h (Added):
	* StdHep/StdEventToC.cc,StdEventToHEPEVT.cc,StdHepVersion.h (Added):
	* StdHep/StdRunInfo.cc,StdRunInfo.hh,WriteStdHep.cc (Added):
	* StdHep/WriteStdHep.hh,appendCollision.cc,cleantmp.cc (Added):
	* StdHep/combineEvents.cc,findInTemporaryMap.cc (Added):
	* StdHep/getRunInfoFromSTDCM.cc,getStdEventFromC.cc (Added):
	* StdHep/getStdEventfromHEPEVT.cc,numParticles.cc (Added):
	* StdHep/numVertices.cc,parseStdEventLine.cc,particle.cc (Added):
	* StdHep/print.cc,printVersion.cc,readRunInfo.cc (Added):
	* StdHep/readStdComment.cc,readStdEvent.cc,readStdEventInfo.cc (Added):
	* StdHep/readStdRun.cc,setConsistencyCheck.cc (Added):
	* StdHep/setTrustMothers.cc,setupConversion.cc,tree.cc (Added):
	* StdHep/writeEventKey.cc,writeRunInfo.cc,writeStdComment.cc (Added):

	revised StdHep uses HepMC

	* StdHep/include/Makefile.in,herwig61.inc,herwig64.inc (Added):
	* StdHep/include/stdcm1.h,stdcm1.inc,stdcnt.h,stdcnt.inc (Added):
	* StdHep/include/stdevent.h,stdlun.h,stdlun.inc,stdtmp.h (Added):
	* StdHep/include/stdver.h,stdver.inc (Added):

	revised StdHep uses HepMC

	* StdHep/examples/GNUmakefile,bookhist.F,dummy.F (Added):
	* StdHep/examples/examHerwigToStdHep.cc,examPythiaToStdHep.cc (Added):
	* StdHep/examples/hwghep.F,hwtran.F,lunhep.F,lutran.F (Added):
	* StdHep/examples/readPythia.cc,readPythiaHerwig.cc,readcxx.F (Added):
	* StdHep/examples/stdflhwxsec.F,stdflpyxsec.F,stdhwgcxx.F (Added):
	* StdHep/examples/stdpytcxx.F (Added):

	revised StdHep uses HepMC

	* HepMC/FIhepevt.cc: need pretend-to-use

Tue Apr 23 09:51:58 2002 Lynn Garren <garren@fnal.gov>

	* HepMC/Polarization.cc: TemplateFuntions.h required for egcs
	* HepMC/ReadHepMCDetail.cc,WriteHepMCDetail.cc: use explicit namespace
	* HepMC/Flow.h,GenParticle.h: remove set_unique_icode
	* HepMC/vertexPointers.cc: improve failure checks
	* HepMC/examples/GNUmakefile: add debug option
	* Makefile.in: don't clean HepPDT/test here

Fri Apr 19 18:33:41 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/BasicVector3D.h,Normal3D.h,Plane3D.h,Point3D.h:
	* Geometry/Transform3D.h,Vector3D.h:

	Added documenting comments.

Thu Apr 18 12:21:36 2002 Lynn Garren <garren@fnal.gov>

	* HepMC/include/hepev4.h,hepev4.inc (Added): more information

	* HepMC/Polarization.h:
	* HepPDT/addPDGParticles.cc,digit.cc:

	for consistency, get math.h from CLHEP.h

	* HepPDT,HepPDT/test: replace HepStd and HepSTL with std

	* HepMC/GenEvent.cc,GenEventtoHEPEVT.cc,GenParticle.cc,GenVertex.cc:

	use stdio.h instead of cstdio - for DEC

	* HepMC/HepMCConfig.h: fix forward declaration

	* HepMC/examples/testMethods.cc: get rid of cmath
	
Wed Apr 17 13:33:45 2002 Lynn Garren <garren@fnal.gov>

	* HepMC/FIhepevt.h,GenEvent.h,GenEventtoHEPEVT.cc,GenParticle.h:
	* HepMC/HEPEVTtoGenEvent.cc,clean.cc:
	* HepMC/particleMotherDaughter.cc (Added):

	adding old StdHepC++ methods
        deal with another common block

	* HepMC/examples/initpydata.F: deal with another common block

	* HepMC/Polarization.h:
	* HepPDT/addPDGParticles.cc,digit.cc:

	use math.h instead of cmath
        cannot use std::sqrt or std::pow with math.h

Wed Apr 17 10:08:52 2002 Mark Fischler <mf@fnal.gov>

	* GenericFunctions/IncompleteGamma.hh,IncompleteGamma.cc:

	Prevent the warning in gcc 3 about comparison of signed to
	unsigned int, while not breaking the behavion of the code,
	by making the static const ITMAX into an int instead of
	an unsigned int.

Fri Apr 12 16:58:58 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/RandGeneral.cc:

	Bug fix in the destructor,
	thanks to Willy Langeveld <wglp09@SLAC.Stanford.EDU>

	Bug fix: delete [] (theIntegralPdf);

	* doxygen/README,config.doxygen,footer.html,modules.doc (Added):

	Files for generation of the documantation with Doxygen.

	* All_headers:

	For Doxygen: added empty documeting comments for classes.
	
Thu Apr 11 10:10:28 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Alist,Combination,Combination,Hist,String,classdoc (Removed):

	Removed obsolete directories.
	They can be recovered from the Attic area, for example:

	  cvs update -d -r CLHEP_1_700 Alist

	* GenericFunctions/Bessel.cc (Removed): 
	* GenericFunctions/SphericalBessel.cc (Removed):
	* GenericFunctions/SphericalNeumann.cc (Removed):
	* GenericFunctions/Bessel.CC (Added): 
	* GenericFunctions/SphericalBessel.CC (Added):
	* GenericFunctions/SphericalNeumann.CC (Added):

	Renamed files which use gsl.

	* Evaluator/Makefile.in:
	* GenericFunctions/Makefile.in:
	* Geometry/Makefile.in:
	* Matrix/Makefile.in:
	* Random/Makefile.in:
	* RandomObjects/Makefile.in:
	* StdHepC++/Makefile.in:
	* Vector/Makefile.in:

	Simplified Makefile.in
	
Mon Apr  1 14:22:12 2002 Lynn Garren <garren@fnal.gov>

	* HepPDT/DDMFactory.hh:

	Use std::map instead of MapVector.
	MapVector does not compile on the non-standard egcs compiler.

Sun Mar 31 10:54:23 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Global_Clean_Up:

	The following macros have been removed from config/CLHEP-target.h.in
	(the reason is indicated). Respectively checks for them have been
	removed from configure.in:  

	  HEP_HAVE_STL       - all supported compilers have string, vector, ...
	  HEP_HAVE_BOOL      - all supported compilers have bool
	  HEP_HAVE_NAMESPACE - all supported compilers have namespace
	  HEP_HAVE_EXPLICIT  - all supported compilers have explicit
	  HEP_HAVE_TYPENAME  - all supported compilers have typename
	  HEP_HAVE_EMPTY_TEMPLATE_PARAMETER_LIST
	                     - all supported compilers have template<>

	  HEP_SQR_NEEDS_PARAMETER_WITHOUT_CONST
	  HEP_ABS_NEEDS_PARAMETER_WITHOUT_CONST
                      - current definition of sqr() and abs() works everywhere

	  HEP_QSORT_NEEDS_FUNCTION_WITH_EXTERN_C_LINKAGE - qsort() is not used

	The following macros have been removed from config/CLHEP.h:

	  HepStdString
	  HepStdVector
	  HepStdList
	  HEP_TEMPLATE_SPECIALIZATION
	  HEP_BEGIN_NAMESPACE
	  HEP_END_NAMESPACE
	  HEP_USING_NAMESPACE

	The following modifications have been made in the code:

	  HepStdString               -->    HepSTL::string
	  HepStdVector               -->    HepSTL::vector
	  HepBoolean                 -->    bool
	  HepDouble                  -->    double
	  HepFloat                   -->    float
	  HepInt                     -->    int
	  HEP_BEGIN_NAMESPACE(xxx)   -->    namespace xxx {
	  HEP_END_NAMESPACE(xxx)     -->    } // namespace xxx

Fri Mar 29 21:02:16 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Makefile.in:
	Introduced SRC_HOME to fix the problem with second level
	of include subdirectories (StdHepC++/include and HepMC/include)

Mon Mar 25 15:55:52 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* compilers.txt:
	Added information on std::ios_base.
	
Fri Mar  8 12:00:47 2002 Lynn Garren <garren@fnal.gov>

	* Makefile.in,configure.in:
	Added HepMC.

=========================================
08.03.02 HepMC has become a part of CLHEP
=========================================

Fri Mar  8 12:00:47 2002 Lynn Garren <garren@fnal.gov>

	* HepMC (Added):
	* HepMC/include (Added):
	* HepMC/doc (Added):
	* HepMC/examples (Added):

	HepMC added the repository.

Fri Mar  8 09:55:09 2002 Lynn Garren <garren@fnal.gov>

	* config/CLHEP-target.h.in,CLHEP.h:
	* config/istream.h,ostream.h (Added):

	Need to deal with base_ios (standard) versus ios (old).
	
        * HepPDT/ParticleDataTableT.icc,TableBuilderPythiaT.icc: 
        * HepPDT/TableBuilderT.hh,TableBuilderT.icc:
	* HepPDT/stringtodouble.cc,stringtodouble.hh (Added):

	Get ready for HepMC.
	
	* HepPDT/test/testHepPDT.cc,testHepPDT.out.save:

	Get ready for HepMC.

	* HepPDT/examples/examMyPDT.out.save,examReadEvtGen.out.save:
	* HepPDT/examples/examReadPDG.out.save,examReadPythia.out.save:
	* HepPDT/examples/examReadQQ.out.save: 
	
	Get ready for HepMC.
	
Wed Mar  6 09:37:58 2002 Mark Fischler <mf@fnal.gov>

	* Vector/Boost.cc,Boost.h,Boost.icc,BoostX.cc,BoostX.h,BoostX.icc:
	* Vector/BoostY.cc,BoostY.h,BoostY.icc,BoostZ.cc,BoostZ.h,BoostZ.icc:
	* Vector/LorentzRotation.cc,LorentzRotation.h,LorentzRotation.icc:
	* Vector/LorentzRotationC.cc,LorentzRotationD.cc:
	* Vector/Rotation.cc,Rotation.h,Rotation.icc,RotationA.cc:
	* Vector/RotationC.cc,RotationE.cc,RotationInterfaces.cc:
	* Vector/RotationInterfaces.h,RotationInterfaces.icc,RotationL.cc:
	* Vector/RotationP.cc,RotationX.cc,RotationX.h,RotationX.icc:
	* Vector/RotationXYZ.cc,RotationY.cc,RotationY.h,RotationY.icc:
	* Vector/RotationZ.cc,RotationZ.h,RotationZ.icc,ThreeVector.icc:
	* Vector/TwoVector.icc:

	Speeed enhancements by making Rotation completely non-polymorphic,
	inlining everything that remotely seems appropriate, ordering
	appearance of inline definitions such that the inlining is ot
	defeated, and so forth.

	This addresses the issue that R*v in CLHEP 1.7 was 3.5 times slower
	than in CLHEP 1.6.  They are now the same speed.
	
Tue Mar  5 16:41:23 2002 Mark Fischler <mf@fnal.gov>

	* GenericFunctions/IncompleteGamma.cc:
	Fix something that fails to compile on some good compilers (gcc 3).
	
Thu Feb 21 16:50:08 2002 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in:
	Added -D_GNU_SOURCE for g++.
	Removed check for HEP_DIFFERENT_EXCEPTIONS.
       
	* config/CLHEP-target.h.in:
	Removed HEP_DIFFERENT_EXCEPTIONS

	* Random/DRand48Engine.cc,DRand48Engine.h:
	Re-declarations of drand48, srand48 and seed48 have been moved
	to DRand48Engine.cc
	
Fri Feb  8 18:40:17 2002 Lynn Garren <garren@fnal.gov>

	* HepPDT/DecayChannelT.hh,DecayChannelT.icc,DecayDataT.hh:
	* HepPDT/DecayDataT.icc,DecayModelBase.hh,ParticleDataT.hh:
	* HepPDT/ParticleDataTableT.hh,ParticleDataTableT.icc:
	* HepPDT/addPDGParticles.cc:

	Bug fixes.

	* HepPDT/examples/examMyPDT.cc,examReadEvtGen.cc,examReadPDG.cc:
	* HepPDT/examples/examReadPythia.cc,examReadQQ.cc:

	Use DefaultConfig.hh.
	
Mon Jan 14 17:43:44 2002 Lynn Garren <garren@fnal.gov>

	* HepPDT/DMFactory.icc,ParticleDataTableT.icc,convertTemporaryMap.icc:
	Fix some definitions.
	
Tue Dec  4 08:31:13 2001 Mark Fischler <mf@fnal.gov>

	* Vector/ZMinput.cc:
	Helper methods to support flexible input formats.

Mon Dec  3 11:55:35 2001 Mark Fischler <mf@fnal.gov>

	* Vector/ThreeVector.h,ThreeVector.icc:
	Declaration of deltaPhi() and implementation of azimAngle in
	terms of it.
	
Fri Nov 30 14:56:46 2001 Lynn Garren <garren@fnal.gov>

	* HepPDT/DecayChannelT.icc,TableBuilderT.icc:
	* HepPDT/translatePDGtabletoPDT.cc,translatePDTtoPDGtable.cc:
	Fix array size problem.

Fri Nov 30 11:32:56 2001 Mark Fischler <mf@fnal.gov>

	* Vector/AxisAngle.cc,Boost.icc,BoostX.icc,BoostY.icc,BoostZ.icc:
	* Vector/EulerAngles.cc,LorentzRotation.icc,LorentzRotationC.cc:
	* Vector/Rotation.icc,RotationA.cc,RotationC.cc,RotationE.cc:
	* Vector/SpaceVectorD.cc,ThreeVector.cc,TwoVector.cc,TwoVector.h:
	* Vector/TwoVector.icc:

	- fix warnings about uninitialized base classes;
	- correct behavior of deltaR() for vectors near but on
	  opposite sides of phi = - pi;
	- correct azimangle and provide deltaPhi() method;
	- set(x,y) for Hep2Vector;
	- all classes that have operator>> can now accept
	  input in same form as operator<< generates output;
	- return value if you take eta(zero vector) is zero
	  rather than 10^72;

Thu Nov 29 16:42:17 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in:
	Added check for the problem with different exceptions in drand48.
	This requires also use of -pedantic-errors instead of -pedantic.

	* config/CLHEP-target.h.in:
	* Random/DRand48Engine.h:
	Introduced HEP_DIFFERENT_EXCEPTIONS.

	* test/testVectorDists.cc:
	Minor changes to provide compilation with -pedantic-errors.

Tue Nov 27 16:48:13 2001 Lynn Garren <garren@fnal.gov>

	* HepPDT/DMFactory.hh,DMFactory.icc,PDGtoQQTable.cc:
	Get rid of g++ -pedantic warnings.
	
Fri Nov 23 15:10:35 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* compilers.txt (Added):
	Added table of compiler dependent features.
	
Mon Nov 19 17:21:18 2001 Lynn Garren <garren@fnal.gov>

	* configure.in:
	* config/CLHEP-target.h.in:
	* config/StringStream.h,sstream.h (Added):
	
	Check for sstream and set HEP_HAVE_SSTREAM.

	* HepPDT/CommonParticleData.hh,CommonParticleData.icc,PDGtoQQTable.hh:
	* HepPDT/ParticleDataT.hh,QQChannel.cc,QQChannel.hh,QQDecay.hh:
	* HepPDT/QQDecayTable.hh,SimpleDecayModel.cc,TableBuilderT.icc:
	* HepPDT/TempParticleData.cc,addEvtGenParticles.cc,addPDGParticles.cc:
	* HepPDT/addPythiaParticles.cc,hasMethods.cc,readQQchannel.cc:
	* HepPDT/readQQstream.cc,write.cc,writeTranslations.cc:
	* HepPDT/HepStringStream.hh (Removed):

	Use CLHEP/config/sstream.h
	Minor cleanup of warning messages.

Thu Nov 15 19:29:36 2001 Lynn Garren <garren@fnal.gov>

	* HepPDT/DMFactory.icc,PDGtoQQTable.cc:
	assert( _inst != 0 )  [should not be necessary]
	
Tue Nov 13 19:31:56 2001 Lynn Garren <garren@fnal.gov>

	* HepPDT/CommonParticleData.hh,CommonParticleData.icc,Constituent.hh:
	* HepPDT/DMFactory.hh,DMFactory.icc,DecayChannelT.hh,DecayChannelT.icc:
	* HepPDT/DecayDataT.hh,DecayDataT.icc,DecayModelBase.hh,DefTable.cc:
	* HepPDT/MapVector.hh,Measurement.icc,NullDecayModelT.hh:
	* HepPDT/PDGtoQQTable.cc,PDGtoQQTable.hh,ParticleDataT.hh:
	* HepPDT/ParticleDataT.icc,ParticleDataTableT.hh,ParticleID.hh:
	* HepPDT/ParticleID.icc,QQChannel.cc,QQChannel.hh,QQDecay.cc:
	* HepPDT/QQDecay.hh,QQDecayTable.cc,ResonanceStructure.cc:
	* HepPDT/SimpleDecayModel.cc,SimpleDecayModel.hh,SpinState.icc:
	* HepPDT/TableBuilderPythiaT.icc,TableBuilderT.icc:
	* HepPDT/TableBuilderTEvtGen.icc,TableBuilderTQQ.icc:
	* HepPDT/TempParticleData.cc,TempParticleData.hh,addEvtGenParticles.cc:
	* HepPDT/addPDGParticles.cc,addPythiaParticles.cc,addQQParticles.cc:
	* HepPDT/buildTable.cc,convertTemporaryMap.icc,readQQstream.cc:
	* HepPDT/translateEvtGentoPDT.cc,translateGeanttoPDT.cc:
	* HepPDT/translateHerwigtoPDT.cc,translateIsajettoPDT.cc:
	* HepPDT/translatePDGtabletoPDT.cc,translatePDTtoEvtGen.cc:
	* HepPDT/translatePDTtoGeant.cc,translatePDTtoHerwig.cc:
	* HepPDT/translatePDTtoIsajet.cc,translatePDTtoPDGtable.cc:
	* HepPDT/translatePDTtoPythia.cc,translatePythiatoPDT.cc,version.cc:
	* HepPDT/write.cc,writeTranslations.cc: 
	* HepPDT/test/testPID.cc:

	Using assert.h, iomanip.h, HepStd, HepSTL.

Fri Nov  9 14:37:30 2001 Lynn Garren <garren@fnal.gov>

	* Makefile.in,configure.in:
	Add HepPDT.
	Add --diag_suppress nonstd_long_long for Linux KCC.

	* HepPDT/HepStringStream.hh:
	Do the right thing for gcc 3.x
	This file needs to be merged with the CLHEP header.

==========================================
09.11.01 HepPDT has become a part of CLHEP
==========================================

Tue Nov  9 07:48:22 2001 Mark Fischler <mf@fnal.gov>

	* HepPDT (Added):
	* HepPDT/doc (Added):
	* HepPDT/test (Added):
	* HepPDT/data (Added):	
	* HepPDT/examples (Added):
	* HepPDT/examples/data (Added):

	HepPDT added the repository.
	
Tue Nov  8 07:48:22 2001 Mark Fischler <mf@fnal.gov>

	* test/testVectorDists.cc,testVectorDists.out.save:

	Modified this test such that when it outputs a matrix, elements
	smaller than one-trillionth are output as 0. Thus the test should
	produce identical results despite slightly different FP math and
	roundoff.

Mon Aug 13 11:21:31 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/GenMatrix.cc:

	Added #include <string.h> to provide declaration of memset().

	* Matrix/Matrix.cc:

	All "return invertHaywood...(ierr);" statements have been
	subdivided in two lines: 
	   invertHaywood...(ierr);
	   return;
	to avoid problems on DEC/cxx.

	* Matrix/DiagMatrix.h,SymMatrix.h,Vector.h:

	Removed "explicit" for constructors with two parameters to avoid
	problems on HP/aCC.

	* Geometry/BasicVector3D.h: Corrected operator>>
	
Tue Jul 31 18:54:39 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/BasicVector3D.h:

	Constructor from Hep3Vector is now protected.
	Changed the signature of the conversion operator to Hep3Vector.

Tue Jul 31 09:13:53 2001 Mark Fischler <mf@fnal.gov>

	* Random/RandGeneral.cc:

	Changed from assert (above = below+1) to ==
	This was first reported by Gregory P. Dubois-Felsmann at SLAC.

Mon Jul 30 18:31:38 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/Makefile.in:

	Added MatrixEqRotation.cc, MatrixInvert.cc, SymMatrixInvert.cc.

Mon Jul 30 11:19:43 2001 Mark Fischler <mf@fnal.gov>

	* Matrix/MatrixInvert.cc,SymMatrixInvert.cc (Added):

	These files contain invertHaywood 4, 5, and 6
	and invertChoelsky 4, 5, 6.
	
Thu Aug  2 2001 Mark Fischler <mf@fnal.gov>

	* Vector/Boost.icc:

	Repair incorrect syntax in new error message code.

Fri Jul 27 2001 Mark Fischler <mf@fnal.gov>

	* Random/doc/html/ (Added):
	* Random/doc/html/CLHEP-random.html (Added):

	Added this ZOOM documentation page.

Fri Jul 27 2001 Mark Fischler <mf@fnal.gov>

	* Matrix/SymMatrix.h,SymMatrix.cc,Matrix.h,Matrix.cc:
	* Matrix/SymMatrixInvert.cc,MatrixINvert.cc (Added):

	Implemented speed-improved inversion for 4x4, 5x5 and 6x6 matrices.
	Inserted the Haywood-style implemtation of inversion for 4x4, 5x5,
	and 6x6 matrices. The speed increase is consdierable for some cases,
	and a bit less in others. In particular, 5x5 symmetric positive
	definite matrices go quite fast now, and these are importat for
	tracking.

	* Matrix/GenMatrix.cc,GenMatrix.icc:

	Zero the elements in the case of pre-allocated storage.
	When constructing a matrix small enough to use pre-allocated array,
	still zero the array data. Lack of this was causing CDF code to crash.

	* Matrix/Vector.h,Matrix.h:

	Made ctor from int explicit.

Fri Jul 27 2001 Mark Fischler <mf@fnal.gov>

	* Vector/ThreeVector.h,ThreeVector.icc,ThreeVector.cc:
	* Vector/AxisAngle.cc,Boost.cc,BoostX.cc,BoostY.cc,BoostZ.cc: 
	* Vector/EulerAngles.cc,LorentzRotationD.cc,LorentzVectorC.cc: 
	* Vetor/Rotation.cc,RotationE.cc,SpaceVectorP.cc,SpaceVectorR.cc:

	NaN-proofed the package:  At every place where there is a potential
	division by zero or a function that could return a memeaningless
	result or Not-A-Number, it is checked and an error message (via
	ZMthrowA or ZMthrowC) is done if there is a problem.  No silent NaN
	generation.

	* Vector/Boost.icc:

	Rectify a misleading error message if ctor is supplied a 0 direction.

Thu Jul 26 18:51:47 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/BasicVector3D.h:

	Added r(), getR(), SetR(), getPhi(), getTheta(),
	eta(), getEta(), setEta().	
	
Mon Jun 18 13:58:16 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Units/doc (Added):
	* Units/doc/Units.tex (Added):

	Added documentation for Units.
	
==============================
15.06.01 Release CLHEP-1.7.0.0
==============================

Fri Jun 15 09:30:42 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Transform3D.cc,Transform3D.h: Disabled m^-1.

	* configure.in:

	Set default options for MS VC++ to "-DWIN32 -O -GX -GR -MD"

	* test/testEvaluator.cc:

	Added "return 0" to avoid problems with "make -check" on NT.
	Added header comments.

	* test/testBasicVector3D.cc:

	Changed endl to HepStd::endl

Thu Jun 14 11:27:44 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/BasicVector3D.h (Added):
	* Geometry/Point3D.h,Vector3D.h,Normal3D.h:

	* test/testBasicVector3D.cc (Added):
	* test/testBasicVector3D.input,testBasicVector3D.out.save (Added):
	* test/testTransform3D.cc,Makefile.in:

	Added BasicVector3D.h to decouple functionality of Point3D,
	Vector3D and Normal3D from functionality of Hep3Vector.

	* test/testEvaluator.in (Removed):
	* test/testEvaluator.input (Added):
	* test/Makefile.in:

	testEvaluator.in has been renamed to testEvaluator.input
	
Tue Jun 12 08:45:20 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Makefile.in: Get rid of xargs.

Mon Jun 11 10:20:35 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in,Makefile.in:
	* configure/Makefile.common.in:
	* test/Makefile.in:

	Added $(VERSION) to the name of the library

	* GenericFunctions/FunctionNumDeriv.cc: Replaced max() by if()

	* GenericFunctions/Variable.hh:

	Removed const from parameters of the constructor
	Variable(unsigned int selectionIndex=0);
	
	* Geometry/Transform3D.cc,Transform3D.h:

	Added getDecomposition(Scale &, Rotation &, Translation &)
	
	* test/Makefile.in:
	* test/testTransform3D.cc (Added): Added test for Transform3D.

	* test/testAList.cc,testCmd.cc,testCmd.out.save (Removed): 
	* test/testComb.cc,testStrings.cc (Removed):

	Removed obsolete tests.
	
Sat Jun  9 09:45:32 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Evaluator/Makefile.in:
	* Matrix/Makefile.in:
	* RandomObjects/Makefile.in:
	* StdHepC++/Makefile.in:
	* Vector/Makefile.in:

	ALLOBJECTS = $(((patsubst %.cc,%.o,$(((SOURCES))

Fri Jun  8 17:47:25 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* GenericFunctiuons/Makefile.in:

	Disabled compilation of Bessel.cc, SphericalBessel.cc
	and SphericalNeumann.cc

Wed May 30 15:51:33 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Evaluator/Evaluator.cc,string.src:
	* test/testEvaluator.cc:
	
	Added code to ignore leading and trailing spaces in names.

Fri May 18 09:32:21 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Evaluator/hash_map.src,utility.src:

	removed "using HepSTL::pair", because it does not compile on HP.

	* GenericFunctions/Bessel.cc,SphericalBessel.cc,SphericalNeumann.cc:

	Changed std:: to HepStd::

Wed May 16 07:10:41 2001 Joe Boudreau <boudreau@fnal.gov>

	* ENTIRE_GenericFunctions_Package:
	* GenericFunctions/Bessel.cc,Bessel.hh (Added):
	* GenericFunctions/BivariateGaussian.cc,BivariateGaussian.hh (Added):
	* GenericFunctions/CutBase.hh,CutBase.icc (Added):
	* GenericFunctions/DoubleParamToArgAdaptor.hh (Added):
	* GenericFunctions/DoubleParamToArgAdaptor.icc (Added):
	* GenericFunctions/Exp.cc,Exp.hh (Added):
	* GenericFunctions/FunctionNoop.cc,FunctionNoop.hh (Added):
	* GenericFunctions/FunctionNumDeriv.cc,FunctionNumDeriv.hh (Added):
	* GenericFunctions/GSLMetaProxy.c,GSLMetaProxy.h (Added):
	* GenericFunctions/Landau.cc,Landau.hh,Ln.cc,Ln.hh (Added):
	* GenericFunctions/ParamToArgAdaptor.hh,ParamToArgAdaptor.icc (Added):
	* GenericFunctions/Tan.cc,Tan.hh (Added):
	* GenericFunctions/TrivariateGaussian.cc (Added):
	* GenericFunctions/TrivariateGaussian.hh (Added):

	* GenericFunctions/doc/genericFunctions.tex:
	
	Bringing the official CLHEP release up to date. The development
	has been happening within another repository (at Fermilab),
	now I am putting several months of work back into the CLHEP
	repository.

	In addition to routine bug fixes, the major points are:

	* Automatic derivative computation
	* Bessel functions, Landau functions, Bivariate and Trivariate
	  Gaussian distributions, Parameter-to-argument adaptors.
	* Use of GSL where available, and a Meta-proxy library used
	  to limp along without the GSL.
	* The base classes for Cuts, providing a for functions that
	  return a yes/no decision for a particular data type, BUT..
	  obeying a boolean algebra.  Designed to interoperate with
	  the STL; and templated on the data type which is cut upon.

	  I discussed this a little in HEPVis'01, and just decided to
	  implement it.

Wed Apr 11 13:54:51 2001 Mark Fischler <mf@fnal.gov>

	* Random/DualRand.cc,Hurd160Engine.cc,Hurd288Engine.cc:
	* Random/RanecuEngine.cc,TripleRand.cc:

	Each saveState method ought to output endl after its data.

	* Random/DRand48Engine.h:

	__P replaced with __STRICT_ANSI__ (for the case g++ -ansi).

Fri Apr  6 11:53:19 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/Makefile.in:

	Removed testRandDists and ranRestoreTest:
	they have been moved to Random/test.

	* Makefile.in,configure.in:
	* test/testVectorDists.cc:
	* RandomObjects/RandMultiGauss.cc,RandomVector.cc,RandomVector.h:

	"Tools" has been changed to "RandomObjects".
	
Thu Apr  5 10:58:07 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Evaluator/utility.src: Avoidance of clashes with ::pair in GCC.
	
Wed Apr  4 10:06:03 2001 Mark Fischler <mf@fnal.gov>

	* Tools/Makefile.in (Removed):
	* Tools/RandMultiGauss.cc,RandMultiGauss.h (Removed):
	* Tools/RandomVector.cc,RandomVector.h (Removed):
	* Tools/RandomVector.icc (Removed): 

	* RandomObjects/Makefile.in (Added):
	* RandomObjects/RandMultiGauss.cc,RandMultiGauss.h (Added):
	* RandomObjects/RandomVector.cc,RandomVector.h (Added):
	* RandomObjects/RandomVector.icc (Added): 

	As agreed, we migrate the Tools involving Random and another
	CLHEP package into a package which I have chosen to name
	RandomObjects.

	RandomObjects in principle depends on Random, Matrix, and Vecgtor
	(though the tools that depend on Vector are not yet present).  

	* Vector/AxisAngle.h,EulerAngles.h:

	Eliminated inconsistancy of virtual methods in no-virtual-destructor 
        class. These classes should not be used polymorphically.

	* test/ranRestoreTest.cc,testRandDists.cc (Removed):
	* test/testRandDists.input,testRandDists.out.save (Removed):

	These were moved into Random/test

	* Random/test/GNUmakefile,gaussSmall.cc (Added):
	* Random/test/gaussSpeed.cc,ranRestoreTest.cc (Added): 
	* Random/test/testRandDists.cc,testRandDists.dat (Added):
	* Random/test/testRandDists.input,testRandDists.input-long (Added):
	* Random/test/testRandDists.out.save (Added): 

	Moved detailed and long tests into package-specific test area
	as agreed.

	* Vector/doc/VectorDefs.tex (Added):

	LaTeX documentation source for details of all the formulas and
	definitions in the Vector package.
	
Tue Apr  3 11:36:23 2001 Mark Fischler <mf@fnal.gov>

	* Vector/LorentzVector.h,LorentzVector.icc:

	inline operator const Hep3Vector & () const;
	to avoid errors on solaris CC 4.2
	
Thu Mar 15 17:42:19 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Evaluator/hash_map.src: Bug fix in clear(): added table[i] = 0;
	
Mon Mar  5 17:09:31 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Units/SystemOfUnits.h:

	Added 'parsec'. It corresponds to the latest developments going
	on in Geant4.
	
Mon Jan 29 16:59:00 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Transform3D.cc,Transform3D.h: Added subscripting
	
Fri Jan 19 16:07:15 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch> 

	* Vector/Makefile.in: Added new *.cc files.

	* Vector/EulerAngles.h: Included "CLHEP/config/iostream.h"

	* Vector/AxisAngle.cc,AxisAngle.h,EulerAngles.h,EulerAngles.cc:
	* Vector/RotationInterfaces.h,RotationX.cc,RotationY.cc:
	* Vector/RotationZ.cc,TwoVector.cc,TwoVector.h: 

	Changed std:: to HepStd::

	* Vector/LorentzRotation.cc:

	Removed operators "using"; setw(), setprecision() changed to
	HepStd::setw(), HepStd::setprecision()

==========================================================================
18.01.01 ZOOM PhysicsVectors Capabilities have become part of CLHEP/Vector
==========================================================================

Thu Jan 18 20:30:00 2001 Mark Fischler <mf@fnal.gov>

	* ENTIRE_Vector_Package:

	Code for merge with capabilities of ZOOM PhysicsVectors.

Thu Jan 18 19:45:00 2001 Mark Fischler <mf@fnal.gov>

	* Random/DRand48Engine.h:

	Placed ifdef to repair problem which when gcc 2.95.2 is used WITHOUT 
  	-ansi, would have caused the header to fail to complie due to 
	mismatch in prototypes of drand48() in header and <stdlib.h>.

Tue Jan  9 15:50:00 2001 Mark Fischler <mf@fnal.gov>

	* Random/Random.h:

	Modified comment for createInstance() to reflect the minor fix
	of Dec 5.

Mon Jan  8 16:24:37 2001 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in:

	Added -GR to the compiler option list on NT.
	Thanks to Dave Casper <dcasper@uci.edu>

Tue Dec  5 11:18:13 2000 Gabriele Cosmo <Gabriele.Cosmo@cern.ch>

	* Random/Random.cc:

	Minor fix in HepRandom::createInstance() and removed useless code.

Wed Nov  8 11:21:44 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/DRand48Engine.cc,DRand48Engine.h:
	* Random/drand48.src (Added):

	More accurate code for drand48() on NT.	DRand48Engine now produces
	exactly the same sequences on all platforms.
	Removed #ifdef in declaration of drand48(), srand48() and seed48().

	* configure.in:

	Added -ansi for g++. After removing #ifdef in declaration
	of drand48(), srand48() and seed48() it now works fine.
 
Mon Nov  6 16:25:21 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/LorentzVector.h,LorentzVector.icc:
	* test/testLorentzVector.cc:

	Correction in const conversion operator.
	Thanks to Leif.Lonnblad@thep.lu.se.

	* Evaluator/Evaluator.cc,Evaluator.h:

	More accurate usage of const.
	
======================================================================
24.10.00 Generic Functions by Joe Boudreau have become a part of CLHEP
======================================================================

Tue Oct 24 09:16:12 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Makefile.in,configure.in:

	* GenericFunctions/Makefile.in (Added): 
	* GenericFunctions/AbsFunction.cc,AbsFunction.hh (Added):
	* GenericFunctions/AbsFunctional.cc,AbsFunctional.hh (Added):
	* GenericFunctions/AbsParameter.cc,AbsParameter.hh (Added):
	* GenericFunctions/AnalyticConvolution.cc (Added):
	* GenericFunctions/AnalyticConvolution.hh (Added):
	* GenericFunctions/Argument.hh,ArgumentList.hh (Added):
	* GenericFunctions/AssociatedLaguerre.cc (Added):
	* GenericFunctions/AssociatedLaguerre.hh (Added):
	* GenericFunctions/AssociatedLegendre.cc (Added):
	* GenericFunctions/AssociatedLegendre.hh (Added): 
	* GenericFunctions/ConstMinusFunction.cc (Added):
	* GenericFunctions/ConstMinusFunction.hh (Added): 
	* GenericFunctions/ConstMinusParameter.cc (Added):
	* GenericFunctions/ConstMinusParameter.hh (Added): 
	* GenericFunctions/ConstOverFunction.cc,ConstOverFunction.hh (Added): 
	* GenericFunctions/ConstOverParameter.cc (Added):
	* GenericFunctions/ConstOverParameter.hh (Added): 
	* GenericFunctions/ConstPlusFunction.cc,ConstPlusFunction.hh (Added): 
	* GenericFunctions/ConstPlusParameter.cc (Added):
	* GenericFunctions/ConstPlusParameter.hh (Added): 
	* GenericFunctions/ConstTimesFunction.cc (Added):
	* GenericFunctions/ConstTimesFunction.hh (Added): 
	* GenericFunctions/ConstTimesParameter.cc (Added):
	* GenericFunctions/ConstTimesParameter.hh (Added):
	* GenericFunctions/Cos.cc,Cos.hh (Added): 
	* GenericFunctions/CumulativeChiSquare.cc (Added):
	* GenericFunctions/CumulativeChiSquare.hh (Added): 
	* GenericFunctions/DefiniteIntegral.cc,DefiniteIntegral.hh (Added):
	* GenericFunctions/Erf.cc,Erf.hh (Added):
	* GenericFunctions/Exponential.cc,Exponential.hh (Added):
	* GenericFunctions/FixedConstant.cc,FixedConstant.hh (Added):
	* GenericFunctions/FloatingConstant.cc,FloatingConstant.hh (Added): 
	* GenericFunctions/FunctionComposition.cc (Added):
	* GenericFunctions/FunctionComposition.hh (Added):
	* GenericFunctions/FunctionConvolution.cc (Added):
	* GenericFunctions/FunctionConvolution.hh (Added): 
	* GenericFunctions/FunctionDifference.cc (Added):
	* GenericFunctions/FunctionDifference.hh (Added): 
	* GenericFunctions/FunctionDirectProduct.cc (Added):
	* GenericFunctions/FunctionDirectProduct.hh (Added): 
	* GenericFunctions/FunctionNegation.cc,FunctionNegation.hh (Added): 
	* GenericFunctions/FunctionPlusParameter.cc (Added):
	* GenericFunctions/FunctionPlusParameter.hh (Added): 
	* GenericFunctions/FunctionProduct.cc,FunctionProduct.hh (Added):
	* GenericFunctions/FunctionQuotient.cc,FunctionQuotient.hh (Added):
	* GenericFunctions/FunctionSum.cc,FunctionSum.hh (Added): 
	* GenericFunctions/FunctionTimesParameter.cc (Added):
	* GenericFunctions/FunctionTimesParameter.hh (Added): 
	* GenericFunctions/Gaussian.cc,Gaussian.hh (Added):
	* GenericFunctions/GenericFunctions.hh (Added):
	* GenericFunctions/IncompleteGamma.cc,IncompleteGamma.hh (Added):
	* GenericFunctions/LikelihoodFunctional.cc (Added): 
	* GenericFunctions/LikelihoodFunctional.hh (Added):
	* GenericFunctions/LogGamma.cc,LogGamma.hh (Added):
	* GenericFunctions/Parameter.cc,Parameter.hh (Added):
	* GenericFunctions/ParameterDifference.cc (Added):
	* GenericFunctions/ParameterDifference.hh (Added):
	* GenericFunctions/ParameterNegation.cc,ParameterNegation.hh (Added):
	* GenericFunctions/ParameterProduct.cc,ParameterProduct.hh (Added): 
	* GenericFunctions/ParameterQuotient.cc,ParameterQuotient.hh (Added):
	* GenericFunctions/ParameterSum.cc,ParameterSum.hh (Added):
	* GenericFunctions/PeriodicRectangular.cc (Added):
	* GenericFunctions/PeriodicRectangular.hh (Added):
	* GenericFunctions/Power.cc,Power.hh (Added):
	* GenericFunctions/Rectangular.cc,Rectangular.hh (Added): 
	* GenericFunctions/ReverseExponential.cc (Added):
	* GenericFunctions/ReverseExponential.hh (Added):
	* GenericFunctions/Sin.cc,Sin.hh (Added): 
	* GenericFunctions/SphericalBessel.cc,SphericalBessel.hh (Added):
	* GenericFunctions/SphericalNeumann.cc,SphericalNeumann.hh (Added):
	* GenericFunctions/Sqrt.cc,Sqrt.hh (Added):
	* GenericFunctions/Square.cc,Square.hh (Added): 
	* GenericFunctions/Variable.cc,Variable.hh,X.cc,X.hh (Added):
	
	* GenericFunctions/doc/Makefile (Added):
	* GenericFunctions/doc/PartiallyClosed.ps,TotallyClosed.ps (Added):
	* GenericFunctions/doc/WideOpen.ps,example.ps,hydrogen.ps (Added):
	* GenericFunctions/doc/genericFunctions.ps (Added):
	* GenericFunctions/doc/genericFunctions.tex (Added):

	* test/Makefile.in:
	* test/testGenericFunctions.cc,testGenericFunctions.out.save (Added):

	Added new package - GenericFunctions
	
Mon Oct 23 17:54:56 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/CLHEP.h: Added definition of HepSTL.

	* docs/Random.html,validation.doc (Removed):
	* Random/doc/Random.html,validation.doc (Added):

	Moved docs for Random from docs/ to Random/doc/.
	
==============================
20.10.00 Release CLHEP-1.6.0.0
==============================

Thu Oct 19 17:22:28 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: Enabled StdHepC++ on NT

Tue Oct 17 14:55:45 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/Randomize.h: 

	Added distributions introduced in CLHEP-1.5.

	* Random/RandPoissonQ.cc,flatToGaussian.cc:
	* Tools/RandMultiGauss.h:
	* test/testRandDists.cc,testVectorDists.cc:

	Corrected warnings on Linux when compile with g++ -pedantic -Wall.
	
Sun Oct 15 18:26:12 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Plane3D.h:

	Bug correction in transform(). Thanks to Helge.Voss@cern.ch.

==============================================================================
12.10.00 Expression Evaluator by Evgueni Tcherniaev has become a part of CLHEP
         Alist, String and Combination have been disabled
==============================================================================

Thu Oct 12 11:28:06 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Makefile.in,configure.in:
	* test/Makefile.in:

	Disabled Alist, String and Combination.

	* Makefile.in,configure.in:

	* Evaluator/Makefile.in,Evaluator.cc,Evaluator.h (Added):
	* Evaluator/setStdMath.cc setSystemOfUnits.cc (Added):
	* Evaluator/hash_map.src,stack.src,string.src,utility.src (Added):

	* test/Makefile.in:
	* test/testEvaluator.cc (Added):
	* test/testEvaluator.in,testEvaluator.out.save (Added):

	Added new package - Evaluator.
	
Thu Sep  7 08:18:39 2000 Mark Fischler <mf@fncrdn.fnal.gov>

	* Random/RandGauss.h,RandGauss.icc,RandGeneral.h,RandPoisson.icc: 

	Correct warnings encountered by Yana Gaponenko.

Tue Aug 22 11:33:33 2000 Mark Fischler <mf@fncrdn.fnal.gov>

	* Matrix/GenMatrix.cc:

	Correction to operator==, to use indices 1-3 rather than 0-2.

	* Random/RandLandau.cc,gaussQTables.cdat:

	Fix warning by using xx.xxf wherever float arrays are being
	intialized.

Mon Aug 14 09:59:51 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/config.guess: Added CYGWIN_98 platform.

Wed May 10 23:18:17 2000 Lynn Garren <garren@fnal.gov>

	* StdHepC++/StdEvent.cc,StdFI.cc: Fix for MVC++
	
Mon May  8 11:38:59 2000 Lynn Garren <garren@fnal.gov>

	* StdHepC++/StdRun.cc:
	* StdHepC++/include/StdHepVer.h:
	* StdHepC++/include/stdver.h,stdver.inc (Removed):

	Keep version number in struct. 

	* StdHepC++/doc/StdHepC++.tex (Added):

	Add the documentation.

	* StdHepC++/examples/GNUmakefile,RunXDR.cc,RunXDR.hh (Added):
	* StdHepC++/examples/StdHepXDR.cc hwghep.F hwtran.F (Added): 
	* StdHepC++/examples/lunhep.F,lutran.F,readCXXXDR.cc (Added):
	* StdHepC++/examples/readCXXXDR.sh,readcxx.F,readtestF.cc (Added):
	* StdHepC++/examples/readtestF.sh,readtestFinit.F (Added):
	* StdHepC++/examples/stdflhwxsec.F,stdflpyxsec.F,stdhwgcxx.F (Added):
	* StdHepC++/examples/stdpytcxx.F,testHerwigtoCXX.cc (Added): 
	* StdHepC++/examples/testHerwigtoCXX.sh,testPythiatoCXX.cc (Added):
	* StdHepC++/examples/testPythiatoCXX.sh (Added):

	Add the examples.
	
	* StdHepC++/examples/mcfio/GNUmakefile,mcf_NTuIOFiles.c (Added):
	* StdHepC++/examples/mcfio/mcf_NTuIOFiles.h,mcf_NTuIOUtils.c (Added): 
	* StdHepC++/examples/mcfio/mcf_NTuIOUtils.h,mcf_StdHep_cxx.c (Added):
	* StdHepC++/examples/mcfio/mcf_Stdhep_xdr.c,mcf_evt_xdr.c (Added):
	* StdHepC++/examples/mcfio/mcf_nTupleDescript.h (Added):
	* StdHepC++/examples/mcfio/mcf_ntuBldDbinc.c (Added):
	* StdHepC++/examples/mcfio/mcf_ntuBldDbinc.h,mcf_ntubldInit.c (Added):
	* StdHepC++/examples/mcfio/mcf_ntubld_db.h,mcf_xdr.h (Added):
	* StdHepC++/examples/mcfio/mcf_xdr_Ntuple.h,mcfio.h mcfio.hh (Added):
	* StdHepC++/examples/mcfio/mcfio_Block.c,mcfio_Block.h (Added): 
	* StdHepC++/examples/mcfio/mcfio_Dict.h,mcfio_Direct.c (Added):
	* StdHepC++/examples/mcfio/mcfio_Direct.h,mcfio_FBinding.c (Added): 
	* StdHepC++/examples/mcfio/mcfio_FPrintDictionary.F (Added):
	* StdHepC++/examples/mcfio/mcfio_SeqDummy.c (Added):
	* StdHepC++/examples/mcfio/mcfio_Sequential.h (Added): 
	* StdHepC++/examples/mcfio/mcfio_Util1.c,mcfio_Util1.h (Added): 
	* StdHepC++/examples/mcfio/mcfio.inc (Added):
	
	Add the examples.

==============================
08.05.00 Release CLHEP-1.5.0.0
==============================

Mon May  8 14:38:15 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: Recovered DISABLED_SUBDIRS.

Sat May  6 08:48:17 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Tools/Random/*.* (Removed):
	* Tools/Makefile.in,RandMultiGauss.cc,RandMultiGauss.h (Added):
	* Tools/RandomVector.cc,RandomVector.h,RandomVector.icc (Added): 
	* test/testVectorDists.cc:
	
	RandMultiGauss and RandomVector have been moved to CLHEP/Tools.

	* Random/JamesRandom.cc: Commented unused "HepDouble uni;"
	
	* test/testVectorDists.cc:

	Added #include "CLHEP/config/TemplateFunctions.h"
	to ensure correct abs(double).

	* test/ranRestoreTest.cc: Changed std:: to HepStd::

	* Makefile.in:
	* config/Makefile.common.in: Removed call of RANLIB.
	
Fri May  5 14:38:09 2000 Lynn Garren <garren@fnal.gov>

	* StdHepC++/Makefile.in,StdEvent.cc,StdEvent.hh: 
	* StdHepC++/StdFI.cc,StdFI.hh (Added): 
	* StdHepC++/inlude/stdhep.h: 

	Clean up the Fortran interface.

Fri May  5 10:32:21 2000 Mark Fischler <mf@fncrdn.fnal.gov>

	* Random/JamesRandom.cc,JamesRandom.h:

	<Vincenzo.Innocente@cern.ch>'s mods to JamesRandom are in.
	
	* Tools/Random/RandMultiGauss.cc:

	Changed std:: to HepStd::
	
	* test/ranRestoreTest.cc,testRandDists.cc:

	Last round of minor warning fixes (in Random package) 
	before the 1.5 release.

Fri May  5 10:29:33 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in,Makefile.in:

	The Hist module has been disabled

Tue Apr 25 16:09:21 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Alist/Makefile.in,Combination/Makefile.in,Geometry/Makefile.in:
	* Hist/Makefile.in,Matrix/Makefile.in,Random/Makefile.in:
	* StdHepC++/Makefile.in,StdHepC++/include/Makefile.in:
	* String/Makefile.in,Units/Makefile.in,Vector/Makefile.in:
	* Utilities/Makefile.in:
	* config/Makefile.common.in,Makefile.in:

	Added HEADERS for installation of header and data files
	
============================================================
24.04.00 StdHepC++ by Lynn Garren has become a part of CLHEP
============================================================

Mon Apr 24 17:50:14 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Makefile.in,configure.in:

	* StdHepC++/Makefile.in (Added):
	* StdHepC++/StdCollision.cc,StdCollision.hh (Added):
	* StdHepC++/StdEvent.cc,StdEvent.hh (Added): 
	* StdHepC++/StdParticle.cc,StdParticle.hh (Added):
	* StdHepC++/StdParticleData.cc,StdParticleData.hh (Added):
	* StdHepC++/StdRun.cc,StdRun.hh,StdStreams.hh (Added):

	* StdHepC++/include/Makefile.in (Added):
	* StdHepC++/include/herwig.inc,stdcm1.h,stdcm1.inc (Added):
	* StdHepC++/include/stdcnt.h,stdcnt.inc,stdevent.h (Added):
	* StdHepC++/include/stdhep.h,stdhep.inc,stdlun.h,stdlun.inc (Added):
	* StdHepC++/include/stdtmp.h,stdver.h,stdver.inc (Added):

	Added source files for StdHepC++

	* config/Makefile.common.in:

	*.hh and *.inc have been added to the list of possible extentions
	for header files
	
Sun Apr 23 18:31:42 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: 
	* config/CLHEP-target.h.in:
	* config/iosfwd.h (Added):
	
	Added test for HEP_HAVE_IOSFWD

Sat Apr 22 11:20:22 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/Makefile.in: Removed testQuickGauss.

Tue Apr 18 15:36:49 2000 Mark Fischler <mf@fncrdn.fnal.gov>

	* test/testRandDists.input,testRandDists.out.save:

	Committing the re-run input and result files.
	
	* test/testQuickGauss.cc (Removed):
	* test/testQuickGauss.input,testQuickGauss.out.save (Removed):

Mon Apr 17 18:00:55 2000 Mark Fischler <mf@fncrdn.fnal.gov>

	* Random/RandLandau.cc,RandPoissonQ.cc,flatToGaussian.cc:

	Added explicit convertion from double to int.

	* Random/erfQ.cc,flatToGaussian.cc:

	Included "CLHEP/config/TemplateFunctions.h"

	* Random/Stat.h:

	Made constructor private; removed private destructor.

	* Random/gaussQtables.src,gaussTables.src,poissonTables.src:

	Changed std:: to HepStd::
	
Sun Apr 16 11:05:32 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/testCmd.out.save (Added):
	* test/Makefile.in:

	Added comparison with control output for testCmd; cosmetic changes
	
Fri Apr 14 16:59:11 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in:

	Added tests for HEP_HAVE_STL and HEP_USE_STD_STL
	
	* config/CLHEP-target.h.in:
	
	Added HEP_HAVE_STL and HEP_USE_STD_STL flags

	* config/CLHEP.h:

	Added definition of HepStdString, HepStdVector and HepStdList

	* Makefile.in:
	* config/Makefile.common.in:
	* test/Makefile.in:

	Added for gmake [dist]clean
	rm -fr cxx_repository Templates.DB SunWS_cache ii_files ti_files
	
Wed Apr  5 10:16:40 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/LorentzVector.cc,ThreeVector.cc:

	operator(): removed "rdummy" - unnecessary reference to
	a static variable "dummy"

	* String/Strings.cc,Strings.h:

	HepString::operator+() has been declared as const.
	Thanks to Abi Soffer <abi@slac.stanford.edu> for the problem report.

	Added check for whether char* passed to operator= is "this" or not.
	Fix provided by Stephen J. Gowdy <SGowdy@lbl.gov>

	* test/testAList.cc,testComb.cc,testStrings.cc:

	Fixes of memory leaks provided by BaBar.

	* test/testCmd.cc: Output bool as with "true" or "false".

Tue Apr  4 18:13:08 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/RandFlat.cc,RandGauss.cc:
	
	restoreEngineStatus(): changed "char* inputword" to "char inputword[]"

	* Random/Makefile.in: added new files.

	* test/Makefile.in: added new tests.

	* test/ranRestoreTest.cc: changed std:: to HepStd:: 

	* test/ranRestoreTest.cc:

	Changed for( HepInt k=0; ... to HepInt k; for(k=0; ...

	* test/gaussTables.cc (Removed):
	* Random/gaussTables.src (Added): 

	Moved test/gaussTables.cc to Random/gaussTables.src

	* test/validation.doc (Removed):
	* docs/validation.doc (Added):

	moved test/validation.doc to docs/validation.doc
	
Tue Mar 28 10:40:19 2000 Mark Fischler <mf@fncrdn.fnal.gov>

	* Random/Stat.h (Added):

	Added the omitted Stat.h

	* Random/gaussQtables.src,gaussTables.src,poissonTables.src:

	These files are not run routinely but are part of the package
	to document how the .cdat tables are created.
	
	* Random/RandFlat.cc,RandGauss.cc,RandPoissonQ.cc: 

	Removed use of std::string from files.
	Corrected bare std:: to HepStd::

	* test/ranRestoreTest.cc (Added):       
	
	Added a brief test of the save/restore mechanism.

Mon Mar 13 11:12:41 2000 Mark Fischler <mf@fncrdn.fnal.gov>

	* Tools/Random/RandMultiGauss.cc,RandMultiGauss.h (Added):
	* Tools/Random/RandomVector.cc,RandomVector.h,RandomVector.icc (Added):
	* test/testVectorDists.cc,testVectorDists.input (Added):
	* test/testVectorDists.out.save (Added): 
	
	The vector distribution RandMiultiGauss, this time in its proper
	place in Tools/Random and with a validity test in test.
	
Fri Mar 10 15:59:57 2000 Mark Fischler <mf@fncrdn.fnal.gov>

	* Random/RandFlat.cc,RandFlat.h,RandFlat.icc:
	* Random/RandGauss.cc,Random/RandGauss.h,RandGauss.icc:

	Workaround for the save/restore misbehavior bug.

	* Random/RandPoisson.cc,RandPoisson.h,RandPoisson.icc:

	Provide for inheritors to have access to defaultMean and other
        necessities.

	RandPoisson.cc: gammln is removed from this file.
	gammln now is in the library on its own merits, via the HepStat class.
	However, to retain backward compatibility with codes that may
	incidentally use ::gammln (since it was already in the library due to
	RandPoisson.cc) we place that (ugly global) definition into
	RandPoisson.cc, pointing it to HepStat::gammln.

	* Random/RandBit.cc RandBit.h RandBit.icc (Added):

	RandBit is equivalent to (and derived from) RandFlat. The only 
	difference is that RandBit is state-free. RandBit::shootBit() 
	and fireBit() will always use ONE uniform random and return just 
	one bit. That is slower than RandFlat::shootBit() but will
	behave correctly with respect to saving and restoring status.
	(Surprisingly, the static version RandBit::shootBit() (which 
	uses a JamesRandom engine) appears to be only 2.5 times slower than
	RandFlat::shootBit() (which caches the word, using the engine more 
	rarely. I would have expected a factor of 8-15.)

	* Random/RandGaussQ.cc,RandGaussQ.h,RandGaussQ.icc (Added):

	A quicker but less accurate distribution, inheriting from RandGauss
	so that it may be used as a drop-in replacement. Stateless.

	* Random/RandGaussT.cc,RandGaussT.h,RandGaussT.icc (Added): 

	An accurate and stateless (won't exhibit save/restore bug)
	table-driven distribution, inheriting from RandGauss so that it
	may be used as a drop-in replacement.  
        
	* Random/RandLandau.cc,RandLandau.h,RandLandau.icc (Added):

	Landau distribution, using the method in CERNLIB.

	* Random/RandPoissonQ.cc,RandPoissonQ.h,RandPoissonQ.icc (Added):

	A quicker but (for mu > 100) less accurate distribution, inheriting 
	from RandPoisson so that it may be used as a drop-in replacement.  
	Even at mu > 100, 6-digit accurate or better.

	* Random/RandPoissonT.cc,RandPoissonT.h,RandPoissonT.icc (Added):

	An accurate and stateless (won't exhibit save/restore bug)
	table-driven distribution, inheriting from RandPoisson so that it
	may be used as a drop-in replacement. Below mu = 100, this is
	3-7 times faster than RandPoisson. Recommended as a replacement.

	* Random/erfQ.cc,flatToGaussian.cc,gammln.cc (Added): 

	Various ancillary mathematical functions needed for the distributions.
        Users may if they wish avail themsleves of this; the list is in the 
        header Stat.h.

	* Random/gaussQTables.cdat,poissonTables.cdat (Added): 

	Tables for the table-driven forms of Gaussian and Piosson
	distributions.
	
	* test/testRandDists.cc,testRandDists.input,testRandDists.out.save: 

        Include tests of the various new forms of Gaussian and Poisson dists.

	* test/validation.doc (Added):

	A file detailing the validation tests, validation levels, and 
	approximate timings of each distribution.  Thus far we have validated
	the gaussian, poisson, and RandGeneral distributions.
	
Thu Jan 27 15:21:27 2000 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/ThreeVector.cc:

	rotateUz(): fix proposed by the Geant4 team to avoid accuracy
	problems noticed on DEC-cxx.

Mon Oct 25 10:41:20 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/LorentzVector.cc,ThreeVector.cc:

	Added static in declaration of dummy in operator()

	* Vector/Rotation.cc: 

	getAngleAxis(): added test for cos(a) < -1

Mon Oct 18 20:09:49 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/Makefile.common.in:
	
	Added installation of *.cdat files

	* Random/NonRandomEngine.cc,RandGauss.cc:
	
	std:: --> HepStd::, some trivial cleaning

	* Random/Makefile.in:

	Added NonRandomEngine.cc

	* test/Makefile.in,gaussTables.cc,testQuickGauss.cc:
	* test/testRandDists.out.save:
	* test/testQuickGauss.input testQuickGauss.out.save (Added): 

	Modifications caused by introduction of testQuickGauss.cc
	and gaussTables.cc

Tue Oct 12 11:13:49 1999 Mark Fischler <mf@fncrdn.fnal.gov>

	* Random/RandGauss.cc,RandGauss.h,RandGauss.icc:
	
	RandGauss is made stateless, repairing the bug of saveEngineStatus
	not saving enough info to reproduce the sequence correctly.

	RandGauss now has a method quick() which is the same as fire() but
	gives deviates which are gaussian to only 6 digit precision -- it
	runs faster.

	* Random/NonRandomEngine.cc,NonRandomEngine.h (Added):
	* test/gaussTables.cc,testQuickGauss.cc,gaussTables.cdat (Added):
	
	gaussTables.cdat contains 30K of table data needed for RandGauss.  It
	was generated by gaussTables.cc; that is included just to document how
	the table was produced. gaussTables.cdat is compiled into RandGauss.cc
	(by an #include) so that user codes don't have to depend on the table
	being present (and don't have to waste time reading in the table).

	A new engine, NonRandomEngine, is included primarily for the use of
	developers testing their code's behavior - it allows you to dictate
	the sequence of randoms supplied by the engine.

Tue Aug 10 16:52:54 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	Improvements provided by David Morrison <dave@bnl.gov>:

	* Makefile.in,test/Makefile.in: 

	configure --prefix=...

	* config/Makefile.common.in: 

	No error messages during installation in case of absence of *.icc
	files
	
Fri Aug  6 12:02:20 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/CLHEP.h:

	* Combination/Lockable.cc:

	* Geometry/Plane3D.cc,Plane3D.h,Transform3D.cc:

	* Hist/HBookFile.cc,TupleManager.cc:
	
	* Matrix/:
	* DiagMatrix.cc,DiagMatrix.h,GenMatrix.cc,Matrix.cc,Matrix.h: 
	* Pile.h,SymMatrix.cc,SymMatrix.h,Vector.cc,Vector.h:

	* Random/:
	* DRand48Engine.cc,DRand48Engine.h,DualRand.cc,DualRand.h: 
	* Hurd160Engine.cc,Hurd160Engine.h,Hurd288Engine.cc: 
	* Hurd288Engine.h,JamesRandom.cc,JamesRandom.h,MTwistEngine.cc: 
	* MTwistEngine.h,RandEngine.cc,RandEngine.h,RandGeneral.cc: 
	* RanecuEngine.cc,RanecuEngine.h,Ranlux64Engine.cc: 
	* Ranlux64Engine.h,RanluxEngine.cc,RanluxEngine.h: 
	* RanshiEngine.cc,RanshiEngine.h,TripleRand.cc,TripleRand.h:

	* String/:
	* CmdLine.cc,CmdLine.h,Strings.cc,Strings.h,Strings.icc:

	* Vector/:
	* LorentzRotation.cc,LorentzVector.cc,LorentzVector.h: 
	* Rotation.cc,ThreeVector.cc,ThreeVector.h,ThreeVector.icc:

	* test/:
	* testAList.cc,testCmd.cc,testComb.cc,testInversion.cc: 
	* testLorentzVector.cc,testMatrix.cc,testRandDists.cc: 
	* testRandom.cc,testStrings.cc,testThreeVector.cc,testUnits.cc: 

	Changed std:: to HepStd:: to avoid problems on OSF

Thu Jul 22 16:59:16 1999 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Alist/ConstAList.icc: 

	Added cast to (const void*) instead of (void*)

	* Matrix/GenMatrix.cc,GenMatrix.h,GenMatrix.icc: 

	Removed pile-up mechanism and replaced with a simple
	array-based allocation. It fixes nasty memory leaks.

Mon Jul  5 21:15:56 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/LorentzVector.h,LorentzVector.icc: 

	Added 'const' to the parameter of rotateUz()

Fri Jul  2 19:02:10 1999 Mark Fischler <mf@fncrdn.fnal.gov>

	* Matrix/Vector.h:

	class HepSymMatrix;
	class HepDiagMatrix;
	needed to be forward-declared in Vector.h
	so that some rather strict compilers would not issue a message.

Thu May 27 17:04:02 1999 Mark Fischler <mf@fncrdn.fnal.gov>

	* Random/:
	* DualRand.cc,RandFlat.icc,Ranlux64Engine.cc,SeedTable.h: 
	* TripleRand.cc,TripleRand.h: 

	fixed up things that were causing warnings on pedantic compilers:
	* order of initialization in RandFlat
	* added {} around each pair of elements in seedTable
	* eliminated the funky private accessors in TripleRand

	* test/testRandDists.cc:

	Minor modification to work with NT.
	Modifications to do better validation:  Moments up to 6th and
	pdf at intervals of .5 sigma.

Sat May 22 12:02:31 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* INSTALL,README:

	Added reference to the CLHEP Web page:
	http://wwwinfo.cern.ch/asd/lhc++/clhep/index.html

Fri May 21 14:37:52 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/:
	* DRand48Engine.cc,DualRand.cc,Hurd160Engine.cc,Hurd288Engine.cc: 
	* JamesRandom.cc,MTwistEngine.cc,RandEngine.cc,RanecuEngine.cc: 
	* Ranlux64Engine.cc,RanluxEngine.cc,RanshiEngine.cc,TripleRand.cc: 

	All char* beginMarker, char* endMarker have been changed to
	char beginMarker[], char endMarker[] to avoid warnings on HP-aCC
	
	* test/testRandDists.cc:

	Changed:
	#include <math.h>  --> #include "CLHEP/config/TemplateFunctions.h"
	std:exp(...)       --> exp(...)
	bool               --> HepBoolean

	* test/testRandDists.dat (Removed):
	* testRandDists.input (Added):

        Renamed: testRandDists.dat to testRandDists.input

	* test/Makefile.in:
	* testRandDists.out.save (Added):

	Modifications needed for automatic run of testRandDists
	
Thu May 20 09:44:06 1999 Mark Fischler <mf@fncrdn.fnal.gov>

	* Random/:
	* DRand48Engine.cc,DRand48Engine.h,DualRand.cc,DualRand.h: 
	* Hurd160Engine.cc,Hurd160Engine.h,Hurd288Engine.cc,Hurd288Engine.h:
	* JamesRandom.cc,JamesRandom.h,MTwistEngine.cc,MTwistEngine.h:
	* RandBinomial.cc,RandBinomial.h,RandBinomial.icc:
	* RandBreitWigner.cc,RandBreitWigner.h,RandBreitWigner.icc:
	* RandChiSquare.cc,RandChiSquare.h,RandChiSquare.icc:
	* RandEngine.cc,RandEngine.h,RandExponential.cc,RandExponential.h:
	* RandExponential.icc,RandFlat.cc,RandFlat.h,RandFlat.icc:
	* RandGamma.cc,RandGamma.h,RandGamma.icc,RandGauss.cc,RandGauss.h:
	* RandGauss.icc,RandGeneral.cc,RandGeneral.h,RandGeneral.icc:
	* RandPoisson.cc,RandPoisson.h,RandPoisson.icc:
	* RandStudentT.cc,RandStudentT.h,RandStudentT.icc:
	* Random.cc,Random.h,Random.icc,RandomEngine.cc,RandomEngine.h:
	* RandomEngine.icc,Randomize.h,RanecuEngine.cc,RanecuEngine.h:
	* Ranlux64Engine.cc,Ranlux64Engine.h,RanluxEngine.cc,RanluxEngine.h:
	* RanshiEngine.cc,RanshiEngine.h,TripleRand.cc,TripleRand.h: 
	* SeedTable.h:
	
	The merge of G. Cosmos January improvements with the ZOOM enhancements.
	Details of the modifications:

	* Hurd160Engine.cc,Hurd288Engine.cc:

	Made a mod to correct the following flaw -- given N consectutive
	calls to operator unsigned int() to get N random 32-bit integers,
	you can deduce the state of a Hurd engine and thus predict the next
	number.  The simple expedient of discarding every Nth number plugs
	this flaw.
	Also, the earlier version was able to give identical sequences in
	two forms of the constructors (very unlikely, but possible).  In the
	newer version, the only way to get the same sequence is to explicitly
	provide the same seeds in the same way.

	* Ranlux64Engine.cc:

	The early version was using an algorithm which differed from that
	intended by Luscher (though it passes our ergodicity tests).  The
	modified one correctly implements the algorithm, so Luscher's
	randomness arguments hold rigorously.

	* RanshiEngine.cc,DualRand.cc,TripleRand.cc:

	In the early version, the constructor taking explicit seeds still
	used numEngine to affect the starting state.  This was not the
	intention, and that has been corrected.  So any program supplying
	explicit seeds to one of these engines will deliver a different stream
	than before. (The default constructor is unaffected - the dependence
	on numEngines is the proper behavior in that case.)

Wed May 19 16:43:17 1999 Mark Fischler <mf@fncrdn.fnal.gov>

	* test/testRandDists.cc,testRandDists.dat (Added): 

	Added a validation program for Random distributions.

Tue May 11 17:17:43 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/LorentzVector.cc,ThreeVector.cc: 

	Simplified input from a stream. Removed coupling with HepString

	* test/testLorentzVector.input,testLorentzVector.out.save (Added): 
	* testThreeVector.input testThreeVector.out.save (Added): 
	* test/Makefile.in,testLorentzVector.cc,testThreeVector.cc: 

	Added tests for input/output from/to a stream

Sat May  1 11:53:14 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* ChangeLog: 

	Information in ChangeLog has been reformated to allow to
	use enscript for preparing html version of ChangeLog:

	enscript -E --color -Whtml -pchangelog.html ChangeLog	

	ChangeLog is now available on the Web, see:
	http://wwwinfo.cern.ch/asd/lhc++/clhep/index.html
	
==============================
20.04.99 Release CLHEP-1.4.0.0
==============================

Tue Apr 20 09:24:34 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/CLHEP-target.h.in:

	Added HEP_HAVE_EXPLICIT and HEP_HAVE_TYPENAME flags

	* config/CLHEP.h:

	Added new macros: HEP_TEMPLATE_SPECIALIZATION, HEP_BEGIN_NAMESPACE,
	HEP_END_NAMESPACE, HEP_USING_NAMESPACE,	explicit and typename

	* configure.in:

	Added tests for "explicit" and "typename"
	
Sun Apr 18 15:36:46 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Transform3D.h:

	Changes in comments to avoid warnings when compile with
	g++ -Wall -pedantic

Sat Apr 17 10:54:17 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Alist/CList.icc:

	Memory leakage fix in HepCList<T>::remove(const T & e);
	by request of G.Cosmo

Sun Apr 11 09:03:37 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/testRotation.cc: Added tolerance DEL in comparisons

Tue Apr  6 19:13:35 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Normal3D.h,Plane3D.h,Point3D.h,Vector3D.h:

	Added explicit destructor by request of S.Giani

Tue Mar 30 20:52:58 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/RandGeneral.cc,RandGeneral.h:

	Modifications provided by Stefano Magni

Mon Mar 22 09:42:55 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: Added tests for "template<>" and "namespace"

	* config/CLHEP-target.h.in:

	Added HEP_HAVE_EMPTY_TEMPLATE_PARAMETER_LIST and HEP_HAVE_NAMESPACE
	macros

Tue Feb 23 19:02:32 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/Rotation.cc:

	More efficient implementation of rotateX(), rotateY(), rotateZ()

Mon Feb 22 15:56:41 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/Rotation.cc:

	More efficient implementation of rotate(angle, axis)

	* test/testRotation.cc (Added):
	* test/Makefile.in: Added test for HepRotation

Thu Feb 18 12:19:13 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/ThreeVector.icc: More efficient implementation of setPhi().

Mon Feb 15 19:01:54 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/ThreeVector.cc,ThreeVector.h:

	Added const in the parameter list

Fri Feb 12 11:37:21 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: Added +DAportable option for CC

	* test/testUnits.cc:

	Added check that local variables do not	interfere with global ones
  
Thu Feb  4 11:38:32 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/testMatrix.out.save:

	Update: the initial random sequence is now different

Fri Jan 29 02:33:37 1999 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/:
	* RandBreitWigner.cc,RandExponential.cc,RandExponential.h:
	* RandExponential.icc,RandFlat.cc,RandFlat.h,RandFlat.icc: 
	* RandGauss.cc,RandPoisson.cc,Random.cc,Random.h,Randomize.h:

	*** HEPRandom 2.1.1 ***
	- Fixes for porting on AIX 4.3.2. No functional changes.
	- Forced call to HepRandom::createInstance() in Randomize.h.
	- Minor cosmetic changes.

	* docs/Random.html: 

	*** HEPRandom 2.1.1 ***
	- Updated doc.

Wed Jan 27 17:14:28 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/LorentzVector.h,LorentzVector.icc: 
	* test/testLorentzVector.cc: 

	Added operator*= and operator* for scaling with HepDouble

Thu Jan 21 10:07:21 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in:

	Added +DAportable option for HP-aCC(f77) by request of ATLAS

	* Vector/LorentzVector.cc,ThreeVector.cc:

	Fix in operator >> provided by Gabriele Cosmo.

Wed Jan 20 23:57:01 1999 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/RandGauss.h: 

	Methods setFlag(false) and setF(false) if invoked in the client
	code before shoot/fire will force generation of a new couple of
	values.

Thu Jan 14 15:14:40 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/:
	* LorentzRotation.h,LorentzRotation.icc,Rotation.h,Rotation.icc:

	Added missing const in operator[]

	* config/Makefile.common.in,test/Makefile.in: 

	Removed -DCLHEP_TARGET_H=<...> to avoid problem on Linux

Wed Jan 13 09:59:26 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/:
	* LorentzVector.cc,LorentzVector.h,ThreeVector.cc,ThreeVector.h: 

	Added streaming operator >> 	

	* Vector/LorentzVector.h,LorentzVector.icc: 

	Introduced setVectMag() and setVectM() functions.

	* Matrix/SymMatrix.cc,test/testInversion.cc: 

	Removed declaration of unused variables

Tue Jan 12 15:36:41 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/Rotation.h,LorentzRotation.h:

	Helper classes HepRotation_row and HepLorentzRotation_row
	moved to public to avoid warnings on SUN.

	* Vector/:
	* LorentzVector.cc,LorentzVector.h,ThreeVector.cc,ThreeVector.h: 

	Introduced enum for save indexing of the coordinates.

Fri Jan  8 00:16:23 1999 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/:
	* RandBinomial.h,RandBinomial.icc,RandChiSquare.h: 
	* RandChiSquare.icc,RandGamma.h,RandGamma.icc,RandGauss.cc: 
	* RandGauss.h,RandGeneral.cc,RandPoisson.cc,RandPoisson.h: 
	* RandStudentT.h,RandStudentT.icc,Random.cc,Random.h,Random.icc: 

	*** HEPRandom 2.1.0 ***
	Random (.h.icc.cc)      : relocated Gauss and Poisson data;
                                  simplified initialisation of static
	                          generator.
	RandGauss (.h.cc),
	RandPoisson (.h.cc)     : relocated static data from HepRandom.
	RandBinomial (.h.icc),
	RandChiSquare (.h.icc),
	RandGamma (.h.icc),
	RandStudentT (.h.icc)   : cleanup of useless data/methods.
	RandGeneral (.cc)       : fixed bug in initialisation of
                                  theIntegralPdf[] in two constructors and
                                  added validity check (courtesy of M.G.Pia)

	* docs/Random.html: 

	*** HEPRandom 2.1.0 ***
	- Updated version number. No functional changes.
	
Thu Jan  7 15:20:22 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/ThreeVector.icc: 

	More efficient implementation of setMag().
	Fixed bug in angle() to protect from acos() of number greater than 1.

	* Vector/LorentzRotation.h,LorentzRotation.icc: 

	Introduced transform(const HepRotation &) for pure spacelike rotation.

Wed Jan  6 17:34:18 1999 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/SymMatrix.cc,SymMatrix.h: 

	New invert() based on "Bunch-Kaufman" algorithm.

	* test/Makefile.in:
	* test/testInversion.cc,testInversion.out.save (Added):

	Added test for new inversion algorithm.

Sun Dec 20 12:05:12 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/Randomize.h: 

	Changed RandFlat::shoot() to HepRandom::getTheEngine()->flat()
	in the definition of HepUniformRand().

Fri Dec 18 11:00:23 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/Matrix.cc,Matrix.h,SymMatrix.cc,Vector.cc:

	Changed dfact() and dfinv() to dfact_matrix() and dfinv_matrix()
	to avoid conflicts with correspondent CERNLIB symbols.

	* Matrix/GenMatrix.cc,GenMatrix.h: Added operator== 

	* Matrix/GenMatrix.icc: 

	Added implementations of operator[] for GenMatrix_row
	and GenMatrix_row_const.
	Commented-out (temporary solution) pile-up mechanism
	in delete_m() and new_m() since responsible of huge mwmory leaks.

	* Matrix/Matrix.cc:

	Fixed bug in dfact_matrix() and introduced "epsilon" constant.

	* Matrix/Pile.h:

	Moved private data on bottom and destructor on top:
	trick needed to fix a bug in VxWorks which requires destructors
	of template classes to be declared at the begining.

Thu Dec 17 10:31:30 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Alist/AList.h,AList.icc,AListBase.cc,AListBase.h,AListBase.icc: 

	Added "const" qualifier in arguments for remove(), hasMember(),
	index(), fIndex().

	* Alist/AListBase.cc: Fixed bug in copy constructor.

	* Alist/CList.icc:

	Bug fix in removeAll(); by request of Nobu Katayama.

Wed Dec 16 16:53:32 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* String/Strings.cc,Strings.h: 

	Fixed bug in both constructors which was causing memory leaks

	* Utilities/CLHEP.h,fortran.h:

	Some fixes from BaBar

=========================================================================
16.12.98 Started: merging with BaBar version of CLHEP provided by G.Cosmo
=========================================================================

Fri Dec 11 11:58:09 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/CLHEP.h: 
	* Matrix/Matrix.cc,Matrix.h,Vector.cc,Vector.h: 
	* tests/testMatrix.cc:

	Introduced HEP_USE_VECTOR_MODULE flag to facilitate
	disabling dependence between the Matrix and Vector modules

	* Utilities/CLHEP.h: 

	Added config/TemplateFuntions.h by request of G.Cosmo

Thu Dec 10 11:43:47 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/Makefile.common.in: 
	* test/Makefile.in:

	Changed COMPILER_FLAG: "" replaced by <> to avoid problems
	with KCC-3.3e

Mon Dec  7 09:44:05 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/config.guess: 

	Added CYGWIN_NT platform.
	It has been introduced in CYGNUS 1.20 (see uname -a).

Sat Dec  5 19:30:24 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: 

	Added test for detection of the std namespace.
	The -DHEP_USE_NEW_STYLE_HEADER option no more exists,
	the HEP_USE_STD macro has been introduced instead.
	Compiler options for DEC: cxx -O -std strict_ansi -timplicit_local

	* config/:
	* CLHEP-target.h.in,CLHEP.h:
	* fstream.h,iomanip.h,iostream.h,strstream.h:

	Macro HEP_USE_STD has been introduced.

	* Combination/Lockable.cc: 

	* Geometry/Plane3D.cc,Plane3D.h,Transform3D.cc: 

	* Hist/HBookFile.cc,TupleManager.cc: 

	* Matrix/:	
	* DiagMatrix.cc,DiagMatrix.h,GenMatrix.cc,Matrix.cc,Matrix.h: 
	* Pile.h,SymMatrix.cc,SymMatrix.h,Vector.cc,Vector.h:
	
	* Random/:
	* DRand48Engine.cc,DRand48Engine.h,DualRand.cc,DualRand.h: 
	* Hurd160Engine.cc,Hurd160Engine.h,Hurd288Engine.cc: 
	* Hurd288Engine.h,JamesRandom.cc,JamesRandom.h,MTwistEngine.cc: 
	* MTwistEngine.h,RandEngine.cc,RandEngine.h,RanecuEngine.cc: 
	* RanecuEngine.h,Ranlux64Engine.cc,Ranlux64Engine.h: 
	* RanluxEngine.cc,RanluxEngine.h,RanshiEngine.cc,RanshiEngine.h: 
	* TripleRand.cc,TripleRand.h: 

	* String/:
	* CmdLine.cc,CmdLine.h,Strings.cc,Strings.h,Strings.icc: 

	* Vector/:
	* LorentzRotation.cc,LorentzVector.cc,LorentzVector.h:
	* Rotation.cc,ThreeVector.cc,ThreeVector.h: 

	* test/: 
	* testAList.cc,testCmd.cc,testComb.cc,testLorentzVector.cc: 
	* testMatrix.cc,testRandom.cc,testStrings.cc,testUnits.cc:

	Added std:: for all I/O statements
	
Thu Dec  3 10:59:23 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: 

	Added test for HEP_QSORT_NEEDS_FUNCTION_WITH_EXTERN_C_LINKAGE macro
	Compiler options for cxx changed:
	-O -std strict_ansi -timplicit_local -DHEP_USE_NEW_STYLE_HEADER

	* Alist/AList.icc,AListBase.h,AListBase.icc,ConstAList.icc:
	* config/CLHEP-target.h.in:

	Added HEP_QSORT_NEEDS_FUNCTION_WITH_EXTERN_C_LINKAGE macro

	* test/testStrings.cc:

	With introduction of the -std strict_ansi option the
	problem with core dump on the DEC platform has disappered.
	
Fri Oct 23 14:14:07 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Point3D.h: 

	Added const in arguments of distance() and distance2()

Fri Oct  9 10:43:33 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/LorentzVector.h,LorentzVector.icc,ThreeVector.cc: 

	Added transverse mass mt=sqrt(perp2()+m2())

Thu Oct  8 15:47:44 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/ThreeVector.h,ThreeVector.cc: 

	Added pseudoRapidity()

	* Vector/LorentzVector.cc,LorentzVector.h,LorentzVector.icc: 

	Added rapidity() and pseudoRapidity()

Mon Sep 28 09:06:56 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: 

	Some modifications for a case NT & g++

	* Matrix/DiagMatrix.icc: 

	Bug fix: ncol has been changed to nrow by request of Nobu Katayama

Sun Sep 27 19:58:43 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/:
	* ThreeVector.h,ThreeVector.icc,ThreeVector.cc:
	* LorentzVector.h,LorentzVector.icc,LorentzVector.cc:

	Added operator[] to read/write the vector components by index

	* Vector/:
	* LorentzRotation.cc,LorentzRotation.h,LorentzRotation.icc: 
	* Rotation.cc,Rotation.h,Rotation.icc: 

	Added C-style subscripts r[i][j]

	* test/Makefile.in: 
	* test/testSubscripts.cc (Added):

	Test for subscripts for the classes from the Vector module

Mon Sep 14 15:24:00 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/TemplateFunctions.h:

	Included #undef for possible existing min/max/sqr/abs macros

	* Units/SystemOfUnits.h: 

	Added angstrom, picobarn, microsecond, picosecond, petaelectronvolt

	* Vector/:
	* ThreeVector.h,ThreeVector.icc,LorentzVector.h,LorentzVector.icc: 

	Added setPerp() by request of LHCB.
	
Wed Aug 26 11:52:52 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/ :
	* DualRand.cc,Hurd160Engine.cc,Hurd288Engine.cc,MTwistEngine.cc: 
	* RanshiEngine.cc,TripleRand.cc:

	Some changes to avoid warnings on HP-CC

Tue Aug 25 12:13:08 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/fc.cc (Removed):
	
	* Random/Makefile.in,RandBinomial.cc,RandBinomial.h: 

	fc() has been renamed to StrirlingCorrection() and moved
	to RandBinomial.cc

Sun Aug 23 19:47:09 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/:
	* DRand48Engine.cc,DualRand.cc,Hurd160Engine.cc,Hurd288Engine.cc: 
	* JamesRandom.cc,MTwistEngine.cc,RandEngine.cc,RanecuEngine.cc: 
	* Ranlux64Engine.cc,RanluxEngine.cc,RanshiEngine.cc: 
	* TripleRand.cc: 

	Removed #ifdef IRIX_6_2_CC_7_1.
	All is.setstate(ios::badbit); replaced by
	is.clear(ios::badbit | is.rdstate());

Sat Aug 22 16:25:47 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/:
	* DualRand.cc,Hurd160Engine.cc,Hurd288Engine.cc,JamesRandom.cc: 
	* MTwistEngine.cc,RandomEngine.h,Ranlux64Engine.cc: 
	* RanluxEngine.cc,RanshiEngine.cc,TripleRand.cc: 

	#include "CLHEP/config/iomanip.h" moved to RandomEngine.h

Fri Aug 21 11:33:33 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch> 

	* Random/:
	* DualRand.cc,Hurd160Engine.cc,Hurd288Engine.cc,RanshiEngine.cc: 
	* TripleRand.cc: 

	Changed order of the #include macros: config/iomanip.h should
	be the last.

	* Random/RandStudentT.cc,fc.cc: Removed #include <math.h>
	
	* test/testMatrix.out.save:

	Output for testMatrix has been changed after modification of
	the Random module

Fri 21 Aug 03:10:24 1998 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/:
	* DualRand.cc,DualRand.h,Hurd160Engine.cc,Hurd160Engine.h: 
	* Hurd288Engine.cc,Hurd288Engine.h,MTwistEngine.cc,MTwistEngine.h:
	* RandBinomial.cc,RandBinomial.h,RandBinomial.icc,RandBreitWigner.icc:
	* RandChiSquare.cc,RandChiSquare.h,RandChiSquare.icc:
	* RandExponential.icc,RandGamma.cc,RandGamma.h,RandGamma.icc:
	* RandGauss.icc,RandGeneral.cc,RandGeneral.h,RandGeneral.icc:
	* RandPoisson.icc,RandStudentT.cc,RandStudentT.h,RandStudentT.icc:
	* Ranlux64Engine.cc,Ranlux64Engine.h,RanshiEngine.cc,RanshiEngine.h:
	* TripleRand.cc,TripleRand.h,fc.cc (Added): 

	* Random/:
	* DRand48Engine.cc,DRand48Engine.h,JamesRandom.cc,JamesRandom.h: 
	* Makefile.in,RandBreitWigner.cc,RandBreitWigner.h,RandEngine.cc: 
	* RandEngine.h,RandExponential.cc,RandExponential.h,RandFlat.cc: 
	* RandFlat.h,RandFlat.icc,RandGauss.cc,RandGauss.h,RandPoisson.cc:
	* RandPoisson.h,Random.cc,Random.h,Random.icc,RandomEngine.cc:
	* RandomEngine.h,RandomEngine.icc,Randomize.h,RanecuEngine.cc:
	* RanecuEngine.h,RanluxEngine.cc,RanluxEngine.h,SeedTable.h: 
 
	* test/testRandom.cc,testRandom.input: 

	* docs/Random.html:

	*** HEPRandom 2.0.0a ***
	Merged additions and new developments by FNAL-Zoom group.
	Added RandGeneral class, courtesy of S.Magni and G.Pieri
	(INFN-Milano).
	Needs validation on supported compilers.
	
==========================
28.07.98 Release CLHEP-1.3
==========================

Mon Jul 27 18:01:15 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch> 

	* config/fstream.h,iomanip.h,iostream.h,strstream.h: 

	WIN32 option has been changed to HEP_USE_NEW_STYLE_HEADERS

Sat Jul 25 15:55:04 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: 

	Compiler options for NT: -DWIN32 -Oi -Ot -Oy -Ob1 -Gs -Gf -Gy -GX -MD

Thu Jul 23 10:05:36 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/testFRandom.f,.cvsignore (Removed): 

	* config/TemplateFunctions.h: 

	CLHEP-default.h replaced by CLHEP.h
	Added HEP_SQR_NEEDS_PARAMETER_WITHOUT_CONST

	* config/iostream.h:

	Removed declarations for basic_ios and basic_streambuf

	* config/CLHEP-target.h.in:

	Added HEP_SQR_NEEDS_PARAMETER_WITHOUT_CONST

	* configure.in: 

	Changed options for cl and f77 on NT
	Added HEP_SQR_NEEDS_PARAMETER_WITHOUT_CONST

Fri Jul 17 09:08:52 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/DiagMatrix.cc:	Bug fix in operator+= and operator-=

Wed Jul 15 13:28:34 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/fstream.h,iomanip.h,iostream.h,strstream.h (Added):

	Localization of I/O

	* Alist/AListBase.h: 

	* Combination/Chooser.h,Combiner.h,Lock.h,Lockable.cc,Lockable.h: 

	* Geometry/Plane3D.cc,Plane3D.h,Transform3D.cc: 

	* Hist/:
	* HBookFile.cc,HBookFile.h,HBookHistogram.h,HBookTuple.cc: 
	* HBookTuple.h,Histogram.h,Tuple.h,TupleManager.cc,TupleManager.h: 

	* Matrix/GenMatrix.h,Pile.h: 

	* Random/RandomEngine.h: 

	* String/CmdLine.cc,CmdLine.h,Strings.cc,Strings.h: 

	* Vector/:
	* LorentzRotation.cc,LorentzVector.cc,LorentzVector.h: 
	* Rotation.cc,ThreeVector.cc,ThreeVector.h: 

	* test/:
	* testAList.cc,testCmd.cc,testComb.cc,testLorentzVector.cc: 
	* testMatrix.cc,testRandom.cc,testStrings.cc,testThreeVector.cc: 
	* testUnits.cc:

	All inclusions of <fstream.h> <iomanip.h> <iostream.h> <strstream.h>
	have been changed to corresponding "CLHEP/config/..."

Tue Jul 14 09:05:20 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/TemplateFunctions.h (Added): 

	min(), max(), abs(), sqr() moved from CLHEP.h to TemplateFunctions.h

	* config/CLHEP.h: 

	* Geometry/Transform3D.cc: 

	* Random/RandBreitWigner.cc,RanecuEngine.cc: 

	* String/Strings.cc: 

	* Vector/Rotation.cc: 

	* test/:
	* testLorentzVector.cc,testMinMaxSqrAbs.cc,testStrings.cc: 
	* testThreeVector.cc:

	min(), max(), abs(), sqr() moved from CLHEP.h to TemplateFunctions.h

Fri Jul  3 15:44:38 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/DiagMatrix.cc: 

	Added ierr = 0; in void HepDiagMatrix::invert().
	Thanks to Andre.Holzner@cern.ch

	* config/CLHEP.h:
	
	Changed definitions of true and false to be consistent
	with ObjectSpace STL

	* Units/PhysicalConstants.h,SystemOfUnits.h:

	Modifications provided by Michel Maire taking into account comments
	from the STAR group

	* PersistenIO/:	
	* ClassDescription.cc,ClassDescription.h,ClassDescription.icc: 
	* DescriptionList.cc,DescriptionList.h,GenericLoader.cc: 
	* GenericLoader.h,Makefile.in,PIBinStream.cc,PIBinStream.h: 
	* PICharStream.cc,PICharStream.h,PICharStream.icc,PIOStream.cc: 
	* PIOStream.h,PIStream.cc,PIStream.h,PIStream.icc,PIXdrStream.cc: 
	* PIXdrStream.h,PIXdrStream.icc,POBinStream.cc,POBinStream.h: 
	* POCharStream.cc,POCharStream.h,POCharStream.icc,POStream.cc: 
	* POStream.h,POStream.icc,POXdrStream.cc,POXdrStream.h: 
	* POXdrStream.icc,PersistentBase.cc,PersistentBase.h:
	* RTTIBase.cc,RTTIBase.h,RTTIBase.icc,TypeInfo.cc,TypeInfo.h:
	* TypeInfo.icc (Removed): 

	* Combination/:
	* DecayChannel.h,FloatWithError.h,HepBaseParticle.cc: 
	* HepBaseParticle.h,HepBaseParticle.icc,InterfaceParticle.cc: 
	* InterfaceParticle.h,InterfaceParticle.icc,ParticleData.h (Removed): 

	* test/:
	* A.cc,A.h,B.cc,B.h,C.cc,C.h,D.cc,D.h,matrixBug.cc,testPIBS.cc: 
	* testPIBSd.cc,testPIBSdc.cc,testPIBSdcb.cc,testPICS.cc: 
	* testPIXS.cc,testPOS.cc,testRTTI.cc (Removed):

	PersistentIO removal
	
Wed May 13 18:02:38 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Normal3D.h,Plane3D.h,Vector3D.h (transform):

	In transform() the non-const argument changed to const

Thu Apr  9 15:47:33 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/Plane3D.h: Rewritten operator ==, added operator !=

	* Vector/ThreeVector.icc: Removed call of abs() and sqr()

	* Makefile.in: "distclean" target now does not erase "configure"

Wed 25 Mar 23:28:54 1998 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/Random.cc,Random.h:

	Some unwanted changes went in ... apologize.

Tue 24 Mar 20:48:39 1998 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* docs/Random.html: -HepRandom 1.9.2-

	* Random/:
	* DRand48Engine.cc,DRand48Engine.h,JamesRandom.h: 
	* RandBreitWigner.cc,RandBreitWigner.h,RandEngine.cc: 
	* RandEngine.h,RandExponential.cc,RandExponential.h,RandFlat.cc: 
	* RandFlat.h,RandFlat.icc,RandGauss.cc,RandGauss.h,Random.cc: 
	* Random.h,Random.icc,RandomEngine.cc,RandomEngine.h: 
	* RandomEngine.icc,RanecuEngine.cc,RanecuEngine.h,RanluxEngine.h: 
	* SeedTable.h:

	HepRandom: better encapsulation as singleton class;
	added static table of seeds (moved from HepRandomEngine).

	RanecuEngine: moved L'Ecuyer coefficients from private
	to protected to allow seed-skipping mechanism.

	RandEngine, DRand48Engine: private copy constructor and operator=.

	Updated documentation and comments.

Thu Feb 19 10:19:45 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/Matrix.cc:

	Bug fix in dfact() provided by Nobu Katayama.
	The bug affected calculation of determinant.

Thu Feb 12 19:19:06 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in:
	* config/CLHEP-target.h.in,CLHEP.h:  

	Added CLHEP_ABS_NEEDS_PARAMETER_WITHOUT_CONST

Tue Feb 10 17:44:35 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/Matrix.cc: 

	Changed HepDouble *mm(m); -> HepDouble *mm; mm = m;
	to avoid problems on Windows NT

Mon Feb  9 19:39:35 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/CLHEP.h: Definitions of sqr() and abs() has been separated

	* test/testMinMaxSqrAbs.cc: 

	Added tests for const int, const float and const double
	
==========================
05.02.98 Release CLHEP-1.2
==========================

Thu Feb  5 01:30:02 1998 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/RandPoisson.h,RandPoisson.cc:
	
	Fixed small bug occouring when "crazy" values for mean were given
	to the Poisson algorithm.

Mon Feb  2 10:41:39 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch> 

	* Random/RanluxEngine.cc: Changed pow(2,24) -> 0x1000000

	* Random/DRand48Engine.h:

	Added declaration of drand48(), srand48() and seed48() for KCC

	* configure.in: Added KCC

	* Makefile.in,configure.in:
	* Alist/Makefile.in:
	* Combination/Makefile.in: 
	* Hist/Makefile.in:
	* Matrix/Makefile.in:
	* String/Makefile.in:
	* Vector/Makefile.in:
	* test/Makefile.in:
	* config/CLHEP-target.h.in:

	Removed PersistentIO stuff

Fri Jan 30 17:10:59 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/:
	* DiagMatrix.cc,DiagMatrix.h,DiagMatrix.icc,GenMatrix.cc: 
	* GenMatrix.h,GenMatrix.icc,Matrix.cc,Matrix.h,Matrix.icc: 
	* MatrixLinear.cc,Pile.h,SymMatrix.cc,SymMatrix.h,SymMatrix.icc:
	* Vector.cc,Vector.h,Vector.icc: 

	Removed PersistentIO stuff. Changes in comments

	* Matrix/:
	* DiagMatrix.cc,DiagMatrix.h,GenMatrix.cc,GenMatrix.h,Matrix.cc: 
	* Matrix.h,SymMatrix.cc,SymMatrix.h,Vector.cc,Vector.h: 

 	#include <iostream.h> isolated in GenMatrix.h and Pile.h

Thu Jan 29 11:28:25 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Makefile.in:

	Added -n10000 option for xargs to avoid problems on FreeBSD

	* config/Makefile.common.in:

	Some corrections to avoid problems on FreeBSD
	Thanks to Larry Felawka <felawka@alph04.triumf.ca>
	
Wed Jan 28 09:55:53 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Matrix/Matrix.cc: 

	Bug fix in HepMatrix::operator=(const HepRotation &m2)

Fri Jan 23 16:24:24 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Random/:
	* DRand48Engine.cc,JamesRandom.cc,RandEngine.cc,RanecuEngine.cc: 
	* RanluxEngine.cc:

	Removed ios::nocreate; KCC has no such mode

	* Random/RandEngine.cc: 

	Removed 'dummy' to avoid warnings with KCC

	* Combination/Combiner.icc:

	Some corrections to avoid warnings with HP/aCC:
	done -> HepCombiner<TYPE>::done
	nlists -> HepCombiner<TYPE>::nlists

	* Combination/Lock.h: 

	Some corrections to avoid warnings with HP/aCC:
	added void to HepLockAddList() and HepLockRemoveList()

	* Geometry/Plane3D.h:
	* Matrix/DiagMatrix.h,Matrix.h,SymMatrix.h,Vector.h:
	* String/CmdLine.h:
	* Vector/LorentzVector.h,ThreeVector.h: 
	
	Declaration class ostream; changed to #include <iostream.h>
	to avoid problems with KCC

Thu Jan 22 10:53:42 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Makefile.in:

	Added "rm configure Makefile.common CLHEP-*.h" for distclean: target

	* test/Makefile.in:

	Added rm *.ii for clean: target

	* test/testRandom.cc:

	Removed 'pause' to avoid warnings with KCC

	* config/Makefile.common.in:

  	Added rm *.a *.ii for clean: target
	
Wed Jan 21 19:05:58 1998 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/testMinMaxSqrAbs.cc (Added):

	* test/Makefile.in: 

	Added test for min(), max(), sqr(), abs() templates

	* test/testMatrix.cc:

	static dum = 0; changed to static int dum = 0;

Fri Dec 19 02:35:57 1997 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/Randomize.h: 

 	Added missing ifdef protection to body

Thu Dec 18 13:27:16 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/CLHEP.h: 

	Added protection for redefinition of true and false
	Thanks to R.D.Schaffer@cern.ch

Tue Dec 16 11:24:16 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/LorentzVector.h,LorentzVector.icc:

	Added another cast operator; bug fix in m()

	* Geometry/Point3D.h:

	Added const for distance() and distance2()

========================================================
08.12.97 Release CLHEP-1.1: Geant4 has migrated to CLHEP
========================================================

Mon Dec  8 14:15:32 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* configure.in: Changed CXXFLAGS for WinNT

Sat Dec  6 19:04:08 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Makefile.in,configure.in:

	Added some stuff for correct installation of Units

	* Units/Makefile.in (Added): 
	
Fri Dec  5 09:28:25 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Units/PhysicalConstants.h,SystemOfUnits.h: 

	Removed all HepUnitOf...
	Redefined pascal
	Replaced pasc to pascal
 	Added km, km2, km3 and mg

	* Vector/:
	* LorentzRotation.cc,LorentzRotation.h,LorentzRotation.icc: 
	* LorentzVector.cc,LorentzVector.h,LorentzVector.icc: 

	New implementation without inheritance from Hep3Vector and
	HepRotation

	* test/testLorentzVector.cc: 

	Corrections caused by new implementation of HepLorentzVector
	and HepLorentzRotation

Wed Dec  3 12:48:17 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/Makefile.in: Removed FLIBS in testRandom

	* Makefile.in: Added rm *.a for distclean

	* configure.in:

	Simpified CXXFLAGS and FFLAGS setting
	Added -Olimit 5000 for SGI
	Added postfix to alpha-dec-osf in "case"

Tue Dec  2 16:09:51 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/CLHEP-target.h.in,CLHEP.h:

	Removed some obsolete macros. Redefined min(),max(),abs(),sqr(). 

Thu Nov 27 14:59:23 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/testUnits.cc:

	exit(0) changed to return 0

	* configure.in: 

	Added test for setting of the HEP_CC_NEED_SUB_WITHOUT_CONST flag

	* config/CLHEP-target.h.in,CLHEP.h: 

	HEP_CC_NEED_SUB_WITHOUT_CONST moved
	from CLHEP.h to CLHEP-target.h.in
	
Tue Nov 18 10:03:37 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/Rotation.cc:

	Bug fix in phiX(), phiY() and phiZ()

	* Vector/:
	* Rotation.cc,Rotation.h,Rotation.icc,ThreeVector.cc: 
	* ThreeVector.h,ThreeVector.icc:

	Changes in comments

Thu Oct 16 03:28:47 1997 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/Random.h,RandomEngine.h,RanecuEngine.cc,RanecuEngine.h:

	Fixed default argument for setSeed() and setSeeds().

	* docs/Random.html: Added few notes ...
	
Wed Oct 15 00:30:42 1997 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* docs/Random.html:
	* Random/:
	* DRand48Engine.cc,JamesRandom.cc,RandEngine.cc,
	* RandFlat.icc,RanluxEngine.cc:
	
	*** HepRandom 1.9.1 ***
	- Fixed old bug inherited from CLHEP0.15 in the algorithm of
	  RandFlat::shootInt(m,n) (... fireInt(m,n)). Now the method shoots
	  values in the interval [m,n[ as correctly stated in the docs.
	  In the old version the interval was wrongly [m,m+n[ ...
	  Thanks to Massimo Lamanna.
	- Fixed minor bug still inherited from CLHEP0.15 in setSeeds()
	  methods of concrete engines.
	  Thanks to Peter Stamfest.
	
Sun Oct 12 11:47:36 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Units/PhysicalConstants.h,SystemOfUnits.h: Changes in comments

Fri Oct 10 12:10:57 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Geometry/:
	* Normal3D.h,Plane3D.cc,Plane3D.h,Point3D.h,Transform3D.cc: 
	* Transform3D.h,Vector3D.h:

	Changes in comments

Thu Oct  9 15:08:57 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Hist/:
	* HBookFile.cc,HBookFile.h,HBookHistogram.cc,HBookHistogram.h: 
	* HBookTuple.cc,HBookTuple.h,Histogram.cc,Histogram.h,Tuple.cc: 
	* Tuple.h,TupleManager.cc,TupleManager.h:

	Added line with cvs Id

Mon Oct  6 18:04:21 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/testThreeVector.cc,testMatrix.cc: Changes in comments

Wed Oct  1 15:46:34 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* test/testRandom.cc: Inserted: -*- C++ -*-

Tue Sep 30 11:03:32 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* String/:
	* CmdArg.cc,CmdArg.h,CmdArg.icc,CmdLine.cc,CmdLine.h,Strings.cc: 
	* Strings.h,Strings.icc:

	Changes in comments

	* test/testStrings.cc,testCmd.cc:

	Changes in comments

Mon Sep 29 10:26:43 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Alist/:
	* AIterator.h,AIterator.icc,AIteratorBase.cc,AIteratorBase.h: 
	* AIteratorBase.icc,AList.h,AList.icc,AListBase.cc,AListBase.h: 
	* AListBase.icc,CIterator.h,CIterator.icc,CList.h,CList.icc: 
	* ConstAIterator.h,ConstAIterator.icc,ConstAList.h: 
	* ConstAList.icc:

	Line with cvs Id has been added

	* Combination/:
 	* Chooser.h,Chooser.icc,Combiner.h,Combiner.icc,Lock.cc,Lock.h: 
	* Lock.icc,Lockable.cc,Lockable.h,Lockable.icc:

	Changes in comments

	* test/testAList.cc,testComb.cc:

	Changes in comments

Fri Sep 26 16:35:31 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/Rotation.h,Rotation.icc,Rotation.cc:

	Added operator(int,int)
	Removed inline from *.cc
	Bug fix in getAngleAxis() - Thanks to Joe Boudreau
	
	* Vector/ThreeVector.h,ThreeVector.icc,ThreeVector.cc: 

	Removed friend classes HepPOStream, HepPIStream

	* Geometry/Transform3D.cc: 

	Bug fix in HepTransform3D(double,...,double)
	Thanks to Brian Heltsley <heltsley@balpha02f.kek.jp>
	Small optimization in HepTransform3D(Point3D,...,Point3D)

Wed Aug 20 16:28:15 1997 Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Vector/LorentzRotation.h,LorentzVector.h,Rotation.h,ThreeVector.h:

	Removed friend HepPOStream & friend HepPIStream
	
Tue Aug 12 02:39:05 1997 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/:
	* RandBreitWigner.cc,RandBreitWigner.h,RandExponential.cc:
	* RandExponential.h,RandFlat.cc,RandFlat.h,RandFlat.icc:
	* RandGauss.cc,RandGauss.h,RandPoisson.cc,RandPoisson.h:
	* Random.cc,Random.h,Random.icc:

	* docs/Random.html:
	
	Updated to release 1.9 of HepRandom.
	- introduced default values for shoot()/fire();
	- added shootArray()/fireArray() for every distribution;
	- defined operator()() using default values for each distribution;
	- updated doc file Random.html.

Tue Jul 22 03:17:08 1997 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/RandomEngine.h,RanluxEngine.h:
 	
	Added missing default second argument value for setSeed() and
 	setSeeds() in RandomEngine and RanluxEngine. If not specified,
 	RanluxEngine luxury is set to 3 by default.

Sat Jul 12 23:06:01 1997 Gabriele Cosmo <gcosmo@slac.stanford.edu>

	* Random/:
	* DRand48Engine.cc,DRand48Engine.h,JamesRandom.h,RandEngine.h: 
	* RanecuEngine.cc,RanecuEngine.h:   
	
	Added abs for setting seed index in RanecuEngine.
	setSeed() and setSeeds() now have default dummy argument set to zero.

Thu Jul 10 22:04:38 1997 Gabriele Cosmo <gcosmo@slac.stanford.edu> 

        * Random/RanecuEngine.cc: fixed bug in setSeed() and setSeeds()
	
Tue Jul 8 16:10:30 1997  Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* OldRandom/:
	* Makefile.in,JamesRandom.cc,JamesRandom.h,Random.cc:
	* Random.h,Random.icc,RandomEngine.cc,RandomEngine.h (Removed):

	* test/testOldRandom.cc (Removed):

	* configure.in: Removed references to OldRandom/

Mon Jul 7 18:19:33 1997  Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>
        
        Adaptation for Windows NT
	
	* aclocal.m4: removed output to /dev/null
	* acsite.m4 (Added): some additional macros
	* configure.in,Makefile.in: modified
	* config/config.sub,config.guess: added reference on cygnus
	* config/Makefile.common.in: changed the procedure of creation
	of the library

	* String/Strings.h:
	* test/testAList.cc,testStrings.cc: 

	#ifdef WIN32
	#include <strstrea.h>
	#else
	#include <strstream.h>
	#endif

	* test/Makefile.in: added suffix _EXE in touch commands

Mon Jul 7 15:49:28 1997  Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* config/CLHEP.h:

	Changed definition of min & max templates to avoid warnings:

	template< class T >
	inline const T& min( const T& a, const T& b ) {
	  // Break this into two lines to avoid an incorrect warning with
	  // Cfront-based compilers.
	  const T& retval = b < a ? b : a;
	  return retval;
	}

	* config/CLHEP.h:

	Changed definition of true & false to avoid warnings:

	#ifdef HEP_HAVE_BOOL
	  typedef bool HepBoolean;
	#else
	  typedef int HepBoolean;
	  const HepBoolean hep_false = 0;
	  #define false hep_false
	  const HepBoolean hep_true  = 1;
	  #define true hep_true
	#endif

	* Alist/: 
	* AList.h,AList.icc,AListBase.h,AListBase.icc,CList.h,CList.icc: 
	* ConstAList.h,ConstAList.icc: 

	* String/:
	* CmdArg.cc,CmdArg.h,CmdArg.icc,Strings.cc,Strings.h,Strings.icc: 
 
	* Matrix/GenMatrix.cc,GenMatrix.h,Pile.h: 

	* Combination/:
	* DecayChannel.h,FloatWithError.h,HepBaseParticle.cc: 
	* HepBaseParticle.h,InterfaceParticle.h,InterfaceParticle.icc: 
	* ParticleData.h: 

	* test/testCmd.cc: 

	Changed bool to HepBoolean

Mon May 12 10:14:52 1997  Leif Lonnblad  <lonnblad@sp053>

	* Combination/HepBaseParticle.h: Made 'hasPositionInfo()' virtual

Tue Mar 18 09:35:58 1997  Evgueni Tcherniaev <Evgueni.Tcherniaev@cern.ch>

	* Combination/Combiner.icc:

	Template HepCombiner<TYPE>::next() has been rewritten to force
	compilation of the test on HP

	* Combination/Chooser.icc:

	Template HepChooser<TYPE>::next() has been rewritten to force
	compilation of the test on HP

	* Geometry/Normal3D.h,Point3D.h,Transform3D.cc,Vector3D.h: 

	Some minor changes to avoid warnings on SUN

Sat Mar 15 10:22:13 1997  Nobu KATAYAMA  <katayama@hpca02.cern.ch>

	* Utilities/CLHEP.h:
	* config/CLHEP.h:

	Tests now run on sgi, dec, ibm, hp and sun with native compiler.

	Skip Istrstream>>String on DEC with cxx 5.3/4 as it gives coredump.

	Hep_persistent_stream is now disabled as a default. (Was agreed
	at May 96 workshop.) Use --enable-persistent-streams

Fri Mar 14 19:24:41 1997  Nobu KATAYAMA  <katayama@hpca02.cern.ch>

	- Added Matrix = Rotation

Fri Mar 14 18:19:29 1997  Nobu Katayama  <katayama@hpplus10.cern.ch>

	- Vector added more functionality from Geant4 and Babar

	- New Random from Geant4

Wed Mar 12 20:08:15 1997  Nobu KATAYAMA  <katayama@hpca02.cern.ch>

	- Removed unused variable names from TupleManager and Histogram.

Wed Mar 12 13:03:47 1997  Nobu Katayama  <katayama@hpplus10.cern.ch>

	- Use HEP_USE_RANDOM instead of USE_RANDOM. Moved Matrix
	  consturctors using HepRandom from .icc into .cc. They are not
	  inline anymore.

Wed Mar 12 07:53:31 1997  Nobu KATAYAMA  <katayama@hpca02.cern.ch>

	- Added Units from the Geant4 team.

	- Added HEP_ to HAVE_STL,HAVE_BOOL and BOOL_IS_NOT_INT 

Tue Mar 11 19:19:36 1997  Nobu KATAYAMA  <katayama@hpca02.cern.ch>

	- Update configure/CLHEP header file scheme.

Tue Mar 11 17:43:53 1997  Nobu Katayama  <katayama@sp052>

	- Removed CLHEP_HIGH_PRECISION from CLHEP.h

	- Use HepDouble in Vector, Matrix, Random and their tests. It is
	  defined in CLHEP.h

Tue Mar 11 11:25:55 1997  Nobu Katayama  <katayama@sp050>

	- Do not free if the pointer is null (AListBase.icc, Strings.icc)

	- Removed unnecessary '/' from PersistentIO/PISterm.h and
	  ClassDescription.icc

	- Test AListSort and ReverseSort in testAList.cc

	- Added comments to SymMatrix::invert(se). Changed ierr to ifail

	- Added HEP_CC_NEEDS_SUB_WITHOUT_CONST and HEP_GNU_OPTIMIZED_RETURN

	- Redefined GCCNAME in test/Makefile.in

	- Removed unised variable names. (Random.icc, Vector.icc)

Mon Mar 10 17:03:13 1997  Nobu Katayama  <katayama@sp050>

	- Use BOOL_IS_NOT_INT in PersistentIO.

	- Added configure script to check bool is typedefed to int.

	- Added srcdir and VPATH in Makefile.ins and removed from
	  Makefile.common.in. Minor changes in Makefiles so that one can use
	  build directory.

	- Added /* */ around the comments after #endif

Mon Mar 10 12:31:02 1997  Nobu Katayama  <katayama@sp065>

	- Do not define static constants in the header file, POXdrStream.h.
	  Namely use the ones with #ifdef __DECCXX for all compilers.

	- Added #include CLHEP-CC.h for sun, sgi and hp in CLHEP.h

	- Compatibility with HPUX CC 3.76 (Matrix classes)

	- Fixed bugs pointed by Bob (Babar). Unary minus operator cannot use
	  SIMPLE_BOP. Added faster sym matrix inversion for dim less than 4.

	- __GNUG__ and __GNUC__ for return optimization using GNU C++ 
	  extension has been renamed to HEP_GNU_OPTIMIZED_RETURN. This is not
	  automatically set as it does not compile on HP with 2.7.2. They were
	  in Matrix subdir.

Wed Feb 19 16:30:14 1997  Leif Lonnblad  <lonnblad@sp053>

	* test/Makefile.in (SOMETESTFILES): Removed target TestRTTI in
 	case persistent streams are disabled.

	* Random/RandomEngine.h: Removed dependencies on persistent IO in
 	case of HEP_NO_PERSISTENT_STREAMS

	* Random/RandomEngine.cc: Removed dependencies on persistent IO in
 	case of HEP_NO_PERSISTENT_STREAMS

	* Random/Random.h: Removed dependencies on persistent IO in
 	case of HEP_NO_PERSISTENT_STREAMS

	* Random/Random.cc: Removed dependencies on persistent IO in
 	case of HEP_NO_PERSISTENT_STREAMS

	* Random/JamesRandom.h: Removed dependencies on persistent IO in
 	case of HEP_NO_PERSISTENT_STREAMS

	* Random/JamesRandom.cc: Removed dependencies on persistent IO in
 	case of HEP_NO_PERSISTENT_STREAMS

Fri Feb 14 09:38:37 1997  Leif Lonnblad  <lonnblad@sp053>

	* Random/Random.cc (HepRandom::breitWignerM2): Fixed serious
 	bug. Used to be 'if ( gamma = 0.0 )' which is always false and
 	causes floating exception in next line.

Fri Feb  7 12:31:52 1997  Leif Lonnblad  <lonnblad@sp053>

	* ChangeLog: Added ChangeLog file.

	* test/testStrings.cc (main): Someone has changed the behavior for the
 	constructor HepString(double, unsigned precision = 6) when running
 	with libg++, I therefore removed the test of this behavior here.

	* test/Makefile.in (testPIBSdc): Corrected bug in the
 	../lib$(LIBCLHEP).a dependence.
	
	* Hist/hbfinit.c: Removed from the repository.

	* Utilities/Makefile.common.in: Changed the target .f.o for the
 	case when f2c is used: The .c file is now removed after the
 	compilation.

	* String/Strings.h: Someone has changed the behavior for the
 	constructor HepString(double, unsigned precision = 6) when running
 	with libg++, so I added a comment about that here.

	* Matrix/Vector.cc: Wraped the #include of PIStream.h and
 	POStream.h inside a #ifndef HEP_NO_PERSISTENT_STREAMS.

	* Matrix/SymMatrix.cc: Wraped the #include of PIStream.h and
 	POStream.h inside a #ifndef HEP_NO_PERSISTENT_STREAMS.

	* Matrix/Matrix.cc: Wraped the #include of PIStream.h and
 	POStream.h inside a #ifndef HEP_NO_PERSISTENT_STREAMS.

	* Matrix/DiagMatrix.icc (fast): Changed the 'static const double
 	zero = 0.0' statement to 'static double zero = 0.0' to avoid
 	problems on some compilers.

	* Matrix/DiagMatrix.cc: Wraped the #include of PIStream.h and
 	POStream.h inside a #ifndef HEP_NO_PERSISTENT_STREAMS.

	* Combination/Makefile.in (SOMEOBJECTS): Removed HepBaseParticle.o
 	and InterfaceParticle.o from the 'SOMEOBJECTS' variable as they
 	were causing trouble when the persistent IO was disabled.

	* Combination/HepBaseParticle.cc: Added declaration of static
 	member 'HepBaseParticle::noName'

	* Makefile.in (depend): Added test directory to list of
 	subdirectories for the 'depend' target.

